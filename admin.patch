diff --git a/admin/src/App.css b/admin/src/App.css
index 181a6daea61cc7ccba1a941e9f34de59881af87b..204e871d88353d1fc020d37c5325416d2d34df18 100644
--- a/admin/src/App.css
+++ b/admin/src/App.css
@@ -1,261 +1,291 @@
-@import url('https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap');
+@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap');
 
 *{margin: 0px; padding: 0px;}
 
-body{ font-family: "Open Sans", sans-serif !important; background: #ebe9e9; overflow-x: hidden;}
-body.dark{background: #071739 !important;}
+:root{
+  --text-color: #403e57;
+  --body-bg: #ebe9e9;
+  --body-dark-bg: #071739;
+  --primary-color: #0858f7;
+  --accent-color: #1866ee;
+  --danger-color: #ff4964;
+  --header-dark-bg: #112143;
+  --muted-text: #5e5d72;
+  --light-bg: #f0f5ff;
+  --dark-secondary-bg: #12254e;
+  --icon-color: #292929;
+  --checkbox-color: #0079bf;
+  --gray-light: #f1f1f1;
+  --search-bg: #e7e7e7;
+  --logout-bg: #bcd2fd;
+  --table-header-bg: #f3f6fd;
+  --table-row-bg: #fafbff;
+  --font-base: 'Poppins', sans-serif;
+}
+
+body{
+  font-family: var(--font-base) !important;
+  background: var(--body-bg);
+  overflow-x: hidden;
+  color: var(--text-color);
+}
+body.dark {
+  background: var(--body-dark-bg) !important;
+  --text-color: rgba(255, 255, 255, 0.7);
+  --table-header-bg: #1e2a48;
+  --table-row-bg: #162038;
+}
 
 
 ::-webkit-scrollbar{width: 5px !important; height: 5px !important;}
-::-webkit-scrollbar-thumb{background: #0858f7 !important;}
+::-webkit-scrollbar-thumb{background: var(--primary-color) !important;}
 ::-webkit-scrollbar-track{background: transparent !important;}
 
-h1,h2,h3,h4,h5,h6,p{color: #403e57;}
+h1,h2,h3,h4,h5,h6,p{color: var(--text-color); font-family: var(--font-base);} 
 
 h4{line-height: 32px;}
 
-.topLoadingBar{height: 4px !important;background: #1866ee  !important;}
-body.dark .topLoadingBar{background: #ff4964   !important;}
+.topLoadingBar{height: 4px !important;background: var(--accent-color)  !important;}
+body.dark .topLoadingBar{background: var(--danger-color)   !important;}
 
-.btn-blue{background: #0858f7 !important; font-size: 14px !important; font-weight: 600 !important; color: #fff !important; text-transform: capitalize !important; border-radius: 5px !important; border-radius: 8px !important;}
+.btn-blue{background: var(--primary-color) !important; font-size: 14px !important; font-weight: 600 !important; color: #fff !important; text-transform: capitalize !important; border-radius: 5px !important; border-radius: 8px !important;}
 
 button .loader{width: 25px !important; height: 25px !important;}
 
 .btn-lg{padding:5px 25px !important ;}
 .btn-big{padding: 10px 25px !important; font-size: 16px !important;}
 .btn-big svg{font-size: 25px !important;}
 
 .btn-round{border-radius: 30px !important;}
 
 .full{max-width: 100% !important; flex: 0 0 100% !important ; width: 100% !important;}
 
 .checkbox {
     display: block;
     margin-bottom: 15px;
   }
   
   .checkbox input {
     padding: 0;
     height: initial;
     width: initial;
     margin-bottom: 0;
     display: none;
     cursor: pointer;
   }
   
   .checkbox label {
     position: relative;
     cursor: pointer;
   }
   
   .checkbox label:before {
     content:'';
     -webkit-appearance: none;
     background-color: transparent;
-    border: 2px solid #0079bf;
+    border: 2px solid var(--checkbox-color);
     box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05), inset 0px -15px 10px -12px rgba(0, 0, 0, 0.05);
     padding: 10px;
     display: inline-block;
     position: relative;
     vertical-align: middle;
     cursor: pointer;
     margin-right: 5px;
   }
   
   .checkboxp input:checked + label:after {
     content: '';
     display: block;
     position: absolute;
     top: 2px;
     left: 9px;
     width: 6px;
     height: 14px;
-    border: solid #0079bf;
+    border: solid var(--checkbox-color);
     border-width: 0 2px 2px 0;
     transform: rotate(45deg);
   }
 
 
 
-.link{color: #5e5d72; font-weight: 800;}
-body.dark{color: rgba(255,255,255,0.7);}
+.link{color: var(--muted-text); font-weight: 800;}
 body.dark .link{color: rgba(255,255,255,0.6) ;}
 
-.link:hover{color: #0858f7 !important; text-decoration: none;}
+.link:hover{color: var(--primary-color) !important; text-decoration: none;}
 
-.link.color{color: #0858f7 !important; text-decoration: none;}
+.link.color{color: var(--primary-color) !important; text-decoration: none;}
 
 
 
 header{width: 100%; height: 70px; background: rgba(255,255,255,0.9); position: fixed; top: 0px; left: 0px; z-index: 1000;  -webkit-backdrop-filter: blur(5px);
     backdrop-filter: blur(5px);}
 
-body.dark header{background: #112143 !important;}
+body.dark header{background: var(--header-dark-bg) !important;}
 
 .logo{text-decoration: none;}
 .logo:hover{text-decoration: none;}
 .logo img{width: 150px;}
- .logo span{color: #292929; font-weight: 800; font-size: 24px;}
+ .logo span{color: var(--icon-color); font-weight: 800; font-size: 24px;}
 body.dark header .logo span{color: #fff !important; opacity: 0.9;}
 
-header button.rounded-circle{min-width: 40px !important; width: 40px !important; height: 40px !important; background: #f0f5ff !important; color: #0858f7;} 
-header button.rounded-circle svg{color: #292929; font-size: 18px !important; transition: all 0.2s ease-in-out;}
+header button.rounded-circle{min-width: 40px !important; width: 40px !important; height: 40px !important; background: var(--light-bg) !important; color: var(--primary-color);} 
+header button.rounded-circle svg{color: var(--icon-color); font-size: 18px !important; transition: all 0.2s ease-in-out;}
 
-header button.rounded-circle:hover svg{color: #0858f7 !important;}
+header button.rounded-circle:hover svg{color: var(--primary-color) !important;}
 
 body.dark header button.rounded-circle{background:#112755 !important ;}
 body.dark header button.rounded-circle svg{color: #fff !important;}
 
 
 header .part2{padding-left: 50px;}
 
-.searchBox{width: 300px; height: 40px; background: #f0f5ff; border-radius: 6px; padding: 3px 15px; align-self: flex-end;}
+.searchBox{width: 300px; height: 40px; background: var(--light-bg); border-radius: 6px; padding: 3px 15px; align-self: flex-end;}
 
-body.dark .searchBox{background: #12254e;}
+body.dark .searchBox{background: var(--dark-secondary-bg);}
 
 .searchBox input{background: transparent; border: 0px; outline: none; padding-left: 0px;
-font-size: 14px; color: #292929;}
+font-size: 14px; color: var(--icon-color);}
 .searchBox input::-webkit-input-placeholder{color: rgba(0,0,0,0.6);}
 
 body.dark .searchBox input,body.dark .searchBox input::-webkit-input-placeholder,body.dark .searchBox svg{color:rgba(255,255,255,0.7) ;}
 
-.searchBox svg{font-size: 18px; color: #292929;}
+.searchBox svg{font-size: 18px; color: var(--icon-color);}
 
-.myAcc{text-align: left !important; color: #0858f7 !important; text-transform: capitalize !important;}
+.myAcc{text-align: left !important; color: var(--primary-color) !important; text-transform: capitalize !important;}
 .userImg{display: flex; align-items: center; justify-content: center; overflow: hidden;
-    width: 40px; height: 40px; border: 1px solid #0858f7; padding: 2px; border-radius: 100%;  background: #0858f7 !important; color: #fff !important;}
+    width: 40px; height: 40px; border: 1px solid var(--primary-color); padding: 2px; border-radius: 100%;  background: var(--primary-color) !important; color: #fff !important;}
 .userImg .rounded-circle{display: flex; align-items: center; justify-content: center; overflow: hidden; width: 100%px; height: 100%px; cursor: pointer; position: relative;}
 .userImg .rounded-circle img{object-fit: cover; width: 100%; height: 100%;}
 
 .userImg.lg{  width: 60px !important; height: 60px !important; }
 
 .myAcc .userInfo{padding-left: 10px;}
-.myAcc .userInfo h4{font-size: 15px; line-height: 15px; font-weight: 600; margin-bottom: 0px; color: #292929;}
+.myAcc .userInfo h4{font-size: 15px; line-height: 15px; font-weight: 600; margin-bottom: 0px; color: var(--icon-color);}
 .myAcc .userInfo p{margin-top: 0px; font-size: 12px; color: #000; opacity: 0.7;}
 
 body.dark .myAcc .userInfo *{color: rgba(255,255,255,0.8) !important;}
-body.dark .css-1t1j96h-MuiPaper-root-MuiDialog-paper{background-color: #12254e !important;}
+body.dark .css-1t1j96h-MuiPaper-root-MuiDialog-paper{background-color: var(--dark-secondary-bg) !important;}
 body.dark .MuiPaper-elevation li *,body.dark .MuiPaper-elevation li{color: rgba(255,255,255,0.8) !important;}
 
 .MuiDialog-paper button{font-weight: 600 !important;}
 
 #account-menu li{font-size: 14px !important; padding: 12px 15px !important;}
 #account-menu li svg{font-size: 20px !important;}
 #account-menu li a{color: #000 !important; text-decoration: none !important; display: flex; align-items: center; width: 100% !important;}
 
 #notifications .MuiPaper-elevation{right: 240px !important; width: 300px !important; left: auto !important; top: 70px !important;}
 
 .dropdown_list .head{padding: 10px 0px;}
 .dropdown_list .head h4{font-size: 17px; font-weight: 600;}
 body.dark .dropdown_list .head h4{color: rgba(255,255,255,0.9) !important;}
 .dropdown_list li.MuiButtonBase-root{background: #ebf6ff !important;
      color: #000 !important; padding: 10px 15px !important;}
 
-     body.dark .dropdown_list li.MuiButtonBase-root{background-color: #12254e !important; background: #12254e !important;}
+     body.dark .dropdown_list li.MuiButtonBase-root{background-color: var(--dark-secondary-bg) !important; background: var(--dark-secondary-bg) !important;}
 
      .dropdown_list li.MunotificationsiButtonBase-root:hover{background: #e2e8ed !important;}
 
 .dropdownInfo {padding-left: 15px;}
 .dropdownInfo h4{font-size: 13px; font-weight: 500; white-space: break-spaces; line-height: 20px; margin-top: 0px; margin-bottom: 0px;}
 .dropdownInfo h4 b{font-weight: 600; margin-right: 5px;}
 .dropdownInfo p{font-size: 12px; font-weight: 500; margin-top: 0px;}
 
-.text-sky{color: #0858f7 !important; font-weight: 500 !important;}
+.text-sky{color: var(--primary-color) !important; font-weight: 500 !important;}
 
 .dropdown_list .scroll{max-height: 300px; overflow-y: scroll; overflow-x: hidden;}
 
 
 
 .main .sidebarWrapper{width: 20%; flex: 0 0 20%; transition: all 0.3s;}
 .main .sidebarWrapper.toggle{width: 0%; flex: 0 0 0%;}
 
 .main .sidebarWrapper .sidebar{width: 20%; height: 100vh; max-height:calc(100% - 70px); position: fixed; top: 70px; left: 0px; background: #fff; overflow-y: scroll; overflow-x: hidden; padding-bottom: 40px; transition: all 0.3s;}
 
-body.dark .main .sidebarWrapper .sidebar{background: #112143 !important;}
+body.dark .main .sidebarWrapper .sidebar{background: var(--header-dark-bg) !important;}
 
 .main .sidebarWrapper.toggle .sidebar{left: -100%;}
 
 .main .sidebarWrapper .sidebar::-webkit-scrollbar{width: 3px !important;}
 .main .sidebarWrapper .sidebar::-webkit-scrollbar-thumb{background: transparent !important;}
-.main .sidebarWrapper:hover  .sidebar::-webkit-scrollbar{background: #0858f7 !important;}
+.main .sidebarWrapper:hover  .sidebar::-webkit-scrollbar{background: var(--primary-color) !important;}
 
 .main .sidebarWrapper .sidebar ul{margin-bottom: 0px; padding: 10px 15px;}
 .main .sidebarWrapper .sidebar ul li{list-style: none; margin-bottom: 5px;}
-.main .sidebarWrapper .sidebar ul li button{color: #5e5d72 !important; text-align: left; justify-content: left; border-radius: 10px !important; padding: 12px 10px !important; align-items: center; text-transform: capitalize !important; font-weight: 600 !important; font-family: "Open Sans", sans-serif !important; font-size: 15px !important;}
+.main .sidebarWrapper .sidebar ul li button{color: var(--muted-text) !important; text-align: left; justify-content: left; border-radius: 10px !important; padding: 12px 10px !important; align-items: center; text-transform: capitalize !important; font-weight: 600 !important; font-family: var(--font-base) !important; font-size: 15px !important;}
 
 body.dark .main .sidebarWrapper .sidebar ul li button{color: rgba(255,255,255,0.8) !important;}
 
 .main .sidebarWrapper .sidebar ul li button .icon{display: flex; align-items: center; justify-content: center; width: 25px; height: 25px; margin-right: 10px;}
 .main .sidebarWrapper .sidebar ul li button .icon svg{ font-size: 22px;}
 
-main .sidebarWrapper .sidebar ul li button *{color: #5e5d72 !important;}
+main .sidebarWrapper .sidebar ul li button *{color: var(--muted-text) !important;}
 
 .main .sidebarWrapper .sidebar ul li button .arrow{margin-left: auto; display: flex; align-items: center; justify-content: center; width: 25px; height: 25px; transition: all 0.3s ease-in-out;}
 
-.main .sidebarWrapper .sidebar ul li button:hover{background: #f1f1f1 !important;}
+.main .sidebarWrapper .sidebar ul li button:hover{background: var(--gray-light) !important;}
 body.dark .main .sidebarWrapper .sidebar ul li button:hover{background: rgba(255,255,255,0.1) !important;}
-.main .sidebarWrapper .sidebar ul li button.active{background: #f1f1f1 !important;}
+.main .sidebarWrapper .sidebar ul li button.active{background: var(--gray-light) !important;}
 body.dark .main .sidebarWrapper .sidebar ul li button.active{background: rgba(255,255,255,0.1) !important;}
-.main .sidebarWrapper .sidebar ul li button.active .icon svg{color: #0858f7 !important;}
+.main .sidebarWrapper .sidebar ul li button.active .icon svg{color: var(--primary-color) !important;}
 .main .sidebarWrapper .sidebar ul li button.active .arrow{transform: rotate(90deg);}
 .main .sidebarWrapper .sidebar ul .submenu{padding: 0px 45px; position: relative; transition: all 0.3s; height: 0px;}
 .main .sidebarWrapper .sidebar ul .submenu::before{content: ''; width: 1px; height: 100%; position: absolute; top: -10px; left: 25px; background: rgba(0,0,0,0.2);}
 body.dark .main .sidebarWrapper .sidebar ul .submenu::before{background: rgba(255,255,255,0.2);}
 .main .sidebarWrapper .sidebar ul .submenu li{width: 100%; list-style: none;}
-.main .sidebarWrapper .sidebar ul .submenu li a{color: #5e5d72 !important; text-decoration: none; display: block; padding: 6px 0px; font-size: 14px; font-weight: 500; transition: all 0.3s; position: relative;}
+.main .sidebarWrapper .sidebar ul .submenu li a{color: var(--muted-text) !important; text-decoration: none; display: block; padding: 6px 0px; font-size: 14px; font-weight: 500; transition: all 0.3s; position: relative;}
 
-.main .sidebarWrapper .sidebar ul .submenu li a::before{content: ''; width: 2px; height: 0%; position: absolute; top:50%; left: -21px; background: #0858f7; opacity: 0; transition: all 0.3s;}
+.main .sidebarWrapper .sidebar ul .submenu li a::before{content: ''; width: 2px; height: 0%; position: absolute; top:50%; left: -21px; background: var(--primary-color); opacity: 0; transition: all 0.3s;}
 
 .main .sidebarWrapper .sidebar ul .submenu li a.active::before{height: 100%; top: 0px; opacity: 1;}
 
 body.dark .main .sidebarWrapper .sidebar ul .submenu li a{color: rgba(255,255,255,0.7) !important;}
 
-.main .sidebarWrapper .sidebar ul .submenu li a:hover,.main .sidebarWrapper .sidebar ul .submenu li a.active,body.dark .main .sidebarWrapper .sidebar ul .submenu li a.active{color: #0858f7 !important;}
-body.dark .main .sidebarWrapper .sidebar ul .submenu li a:hover{color: #0858f7 !important;}
+.main .sidebarWrapper .sidebar ul .submenu li a:hover,.main .sidebarWrapper .sidebar ul .submenu li a.active,body.dark .main .sidebarWrapper .sidebar ul .submenu li a.active{color: var(--primary-color) !important;}
+body.dark .main .sidebarWrapper .sidebar ul .submenu li a:hover{color: var(--primary-color) !important;}
 
 .main .sidebarWrapper .sidebar ul .submenuWrapper{transition: all 0.4s; height: 0px; overflow: hidden; opacity: 0;}
 .main .sidebarWrapper .sidebar ul .submenuWrapper.colapsed .submenu{opacity: 0;}
 
 .main .sidebarWrapper .sidebar ul .submenuWrapper.colapse{height:auto; overflow: inherit; opacity: 1; padding: 10px 0px;}
 .main .sidebarWrapper .sidebar ul .submenuWrapper.colapse .submenu{opacity: 1; height:auto;}
 
 
 .logoutWrapper {padding: 0px 25px;}
-.logoutWrapper .logoutBox{width: 100%; height: 130px; padding: 25px; background: #bcd2fd; border-radius: 10px;  display: flex; align-items: center; justify-content: center; position: relative; overflow: hidden;}
+.logoutWrapper .logoutBox{width: 100%; height: 130px; padding: 25px; background: var(--logout-bg); border-radius: 10px;  display: flex; align-items: center; justify-content: center; position: relative; overflow: hidden;}
 
 
 body.dark .logoutWrapper .logoutBox{ background: transparent; background-image: linear-gradient(#183e8c, #163474);}
 
 .text-danger{color: #ff6179 !important;}
 
 
 
-.logoutWrapper .logoutBox::before{content: ''; width: 70px; height: 70px; background: #0858f7;
+.logoutWrapper .logoutBox::before{content: ''; width: 70px; height: 70px; background: var(--primary-color);
 border-radius: 100%; position: absolute; top: -20px; right: -20px; opacity: 0.5;}
 
-.logoutWrapper .logoutBox::after{content: ''; width: 30px; height: 30px; background: #0858f7;
+.logoutWrapper .logoutBox::after{content: ''; width: 30px; height: 30px; background: var(--primary-color);
     border-radius: 100%; position: absolute; top: 20px; left: 10px; opacity: 0.5;}
 
 .logoutWrapper .logoutBox button{font-size: 14px !important; font-weight: 600 !important;}
 .logoutWrapper .logoutBox button svg{margin-right: 5px; font-size: 18px !important;}
 
 
 .main .content{width: 80%; flex: 0 0 80%; transition: all 0.3s ;}
 .main .content.toggle{width: 100%; flex: 0 0 100%;}
 
 .right-content{padding: 78px 30px; padding-bottom: 10px;}
 
 .dashboard_Box{justify-content: space-between;}
 .dashboard_Box .dashboardBox{width: 23% !important;}
 
 .dashboardBoxWrapper{gap: 25px; width: 100%; flex-wrap: wrap;}
 .dashboardBoxWrapper .dashboardBox{width: 48%; height: 170px; border-radius: 10px; overflow: hidden; padding: 20px; display: flex; flex-direction: column;
     justify-content: space-around; text-align: left !important; position: relative; color: #fff; text-transform: capitalize !important; }
 
 .dashboardBoxWrapper .dashboardBox .col1 h4{font-size: 16px; font-weight: 600;}
 .dashboardBoxWrapper .dashboardBox .col1 span{font-size: 35px !important; font-weight: bold;
 line-height: 45px;}
 
 
 .dashboardBoxWrapper .dashboardBox .icon{display: flex; align-items: center; justify-content: center; width: 50px; height: 50px; border-radius: 10px; background-image: linear-gradient(to bottom right, rgba(0,0,0,0.0), rgba(0,0,0,0.3));}
 .dashboardBoxWrapper .dashboardBox .icon svg{font-size: 36px; opacity: 0.4; color: #fff;}
@@ -304,228 +334,229 @@ h1, h2, h3, h4, h5, h6,p {color: #201f2f;}
 
 
 body.dark .css-1yk1gt9-MuiInputBase-root-MuiOutlinedInput-root-MuiSelect-root, body.dark h1,
 body.dark h2,
 body.dark h3,
 body.dark h4,
 body.dark h5,
 body.dark h6,
 body.dark p, body.dark .css-hfutr2-MuiSvgIcon-root-MuiSelect-icon, body.dark .css-bpeome-MuiSvgIcon-root-MuiSelect-icon{color:rgba(255,255,255,0.8) !important;}
 
 p{font-weight: 300; font-size: 15px; line-height: 25px;}
 
 body.light p{font-weight: 400 !important;}
 
 body.dark .css-1d3z3hw-MuiOutlinedInput-notchedOutline{border-color: rgba(255,255,255,0.3) !important;}
 
 .table-responsive::-webkit-scrollbar-thumb{background: #ccc !important;}
 body.dark .table-responsive::-webkit-scrollbar-thumb{background: rgba(255,255,255,0.3) !important;}
 
 .slick-slide{outline: none !important;}
 
 
 table td .text-blue{color:blue !important;}
 
 
+.table-striped tbody tr:nth-of-type(odd){background: var(--table-row-bg);}
 body.dark .table-striped tbody tr:nth-of-type(odd){background: rgba(0,0,0,0.2) !important;}
 
 .table th{white-space: nowrap;}
 
-.table .thead-dark th{background-color: #1866ee !important; border-color: rgba(255,255,255,0.1) !important; font-size: 13px !important;}
+.table .thead-dark th{background-color: var(--table-header-bg) !important; border-color: rgba(0,0,0,0.05) !important; font-size: 13px !important;}
 
-.table tbody td{font-size: 14px !important; color: #2f2d3e; font-weight: 500;}
+.table tbody td{font-size: 14px !important; color: #2f2d3e; font-weight: 500; font-family: var(--font-base);}
 
 .table tbody .actions button{min-width: 32px !important; width: 32px !important; height: 32px !important; margin: 0px 3px !important;}
 
 .table tbody .actions button.secondary{background: rgba(203,60,231,0.2) !important;}
 .table tbody .actions button.success{background: rgba(26,159,83,0.2) !important;}
 
 body.dark .table tbody .actions button.secondary{background-color: #de2fff !important;}
 body.dark .table tbody .actions button.secondary svg{color: #fff !important;}
 
 body.dark .table tbody .actions button.success{background-color: #27bf68 !important;}
 body.dark .table tbody .actions button.success svg{color: #fff !important;}
 
 button.error{background-color: #ff6179 !important;}
 button.error svg{color: #fff !important;}
 
 .table tbody .actions button svg{font-size: 30px !important;}
 
 table.v-align td{vertical-align: middle !important;}
 
 .table td .old,.table td .new{display: block; width: 100%;}
 
 table td .imgWrapper{width:20%; flex: 0 0 20%;}
 table td .imgWrapper .card{border-radius: 10px !important; overflow: hidden !important;}
 table td .info{width: 65%; flex: 0 0 65%;}
 
 table td .info h6{overflow: hidden;
     text-overflow: ellipsis;
     white-space: nowrap;font-size: 14px;
     font-weight: 600;
     margin-bottom: 0px;}
 
     table td .info p{font-size: 13px;
         line-height: 18px; overflow: hidden;
         text-overflow: ellipsis;
-        white-space: nowrap;  color: #5e5d72; margin-bottom: 0px;}    
+        white-space: nowrap;  color: var(--muted-text); margin-bottom: 0px;}    
 
 
  table.v-align td .productBox{width: 270px;}  
 
 
  .tableFooter{padding-bottom: 20px;}
  .tableFooter p{margin-bottom: 0px; font-size: 14px; font-weight: 500;}
  .tableFooter .pagination{margin-left: auto;}
 
  .tableFooter p{ font-size: 14px; font-weight: 500; margin-bottom: 0px;}
 
  body.dark table td{color: rgba(255,255,255,0.5) !important;}
 
- .css-1to7aaw-MuiButtonBase-root-MuiPaginationItem-root.Mui-selected{background-color: #0858f7 !important;}
+ .css-1to7aaw-MuiButtonBase-root-MuiPaginationItem-root.Mui-selected{background-color: var(--primary-color) !important;}
 
  body.dark .table-bordered td, .table-bordered th{border: 1px solid rgba(255,255,255,0.1) 
     !important;}
 
     body.dark .css-1to7aaw-MuiButtonBase-root-MuiPaginationItem-root:hover{background: rgba(255,255,255,0.2) !important; color: #fff !important;}   
 
     body.dark .css-1to7aaw-MuiButtonBase-root-MuiPaginationItem-root{color: rgba(255,255,255,0.8) !important;}
 
 
  .loginSection{width: 100%; height: 100vh; padding: 35px 25px; background:#fff; position: relative; }
 
 body.dark  .loginSection{background: #112142 !important;}
-body.dark form .form-control{background: #071739 !important; border: 1px solid rgba(255,255,255,0.1) !important; color: rgba(255,255,255,0.7) !important;}
+body.dark form .form-control{background: var(--body-dark-bg) !important; border: 1px solid rgba(255,255,255,0.1) !important; color: rgba(255,255,255,0.7) !important;}
 
 body.dark form .form-control::-webkit-input-placeholder{color: rgba(255,255,255,0.5) !important;}
 
 
  .loginPatern{width: 100%; height: 100%; opacity: 0.1; position: fixed; top: 0px; left: 0px;
 z-index: 99; pointer-events: none;}
 
 .loginSection .loginBox{width: 350px; height: auto; margin:auto;}
 .loginSection .loginBox .wrapper{width: 100%; height: auto; background: #f0f0f0; position: relative; z-index: 100; padding: 35px;}
 
 .loginSection .loginBox .wrapper .form-group{margin-bottom: 18px;}
 
 .loginSection .loginBox .wrapper .form-control{background: #fff; box-shadow: none !important; outline: none !important; border-radius: 8px !important; font-size: 14px; font-weight: 600; height: 45px; padding-left: 40px;}
-.loginSection .loginBox .wrapper .form-group.focus .icon svg{color: #0858f7 !important;}
+.loginSection .loginBox .wrapper .form-group.focus .icon svg{color: var(--primary-color) !important;}
 
-.loginSection .loginBox .wrapper .form-control:focus{border: 1px solid #0858f7 !important;}
+.loginSection .loginBox .wrapper .form-control:focus{border: 1px solid var(--primary-color) !important;}
 
 .loginSection .loginBox .wrapper .form-group .icon{position: absolute; top: 3px; left: 10px; z-index: 100; font-size: 23px;}
-.loginSection .loginBox .wrapper .form-group .icon svg{color: #5e5d72;}
+.loginSection .loginBox .wrapper .form-group .icon svg{color: var(--muted-text);}
 
 .toggleShowPassword{position: absolute; top: 10px; right: 8px; cursor: pointer;}
-.toggleShowPassword svg{font-size: 22px; color: #5e5d72;}
+.toggleShowPassword svg{font-size: 22px; color: var(--muted-text);}
 
 .loginSection .loginBox .wrapper .link{font-size: 14px;}
 
 .loginSection .loginBox .wrapper .or span.line{ display: block; width: 35%; height: 1px; background: rgba(0,0,0,0.2);}
 .loginSection .loginBox .wrapper .or span.txt{display: flex; align-items: center; justify-content: center; font-size: 16px; font-weight: 600; width:40px; height: 40px; border: 1px solid rgba(0,0,0,0.2); border-radius: 50%;}
 
 body.dark .loginSection .loginBox .wrapper .or span.line{background: rgba(255,255,255,0.3) !important;}
 
 body.dark .loginSection .loginBox .wrapper .or span.txt{border: 1px solid rgba(255,255,255,0.3); color: rgba(255,255,255,0.5) !important;}
 
 .loginWithGoogle{text-transform: capitalize !important; font-weight: bold !important;}
 
 
 body.dark .css-12wnr2w-MuiButtonBase-root-MuiCheckbox-root{color: rgba(255,255,255,0.7) !important;}
 
 body.dark .css-1c99szj-MuiRating-icon{color:rgba(255,255,255, 0.6) !important;}
 
-.signUpSection{background: #f1f1f1 !important; padding: 0px 0px; height: auto !important; }
+.signUpSection{background: var(--gray-light) !important; padding: 0px 0px; height: auto !important; }
 .signUpSection .loginBox{background: #e4e4e4 !important; position: relative; z-index: 100;
 width: 100% !important; padding: 25px 5px !important;}
 .signUpSection .loginBox .wrapper{border: 0px !important; background: transparent !important;
 padding-top: 10px !important;}
 
 body.dark .signUpSection .loginBox{background: #1b2b4d !important;}
 
 .signUpSection .part1{padding-left: 100px; padding-right: 100px;}
 .signUpSection .part1 h1{font-size: 50px; font-weight: 800;}
 .signUpSection .part1 h1 span{font-weight: 800 !important;}
 .signUpSection .part1 p{font-size: 18px; font-weight: 500;}
 
 
 .breadcrumbs_  a:hover{text-decoration: none !important;}
-body.dark .breadcrumbs_  a{background-color: #112143 !important;}
+body.dark .breadcrumbs_  a{background-color: var(--header-dark-bg) !important;}
 body.dark .breadcrumbs_  a *{color: rgba(255,255,255,0.7) !important;}
-body.dark .breadcrumbs_  li .MuiChip-filled{background-color: #112143 !important; color: rgba(255,255,255,0.7) !important;}
+body.dark .breadcrumbs_  li .MuiChip-filled{background-color: var(--header-dark-bg) !important; color: rgba(255,255,255,0.7) !important;}
 
-body.dark .css-1wuw8dw-MuiBreadcrumbs-separator{background-color: #112143 !important; color: rgba(255,255,255,0.7) !important;}
+body.dark .css-1wuw8dw-MuiBreadcrumbs-separator{background-color: var(--header-dark-bg) !important; color: rgba(255,255,255,0.7) !important;}
 
 
 .sliderSml .slick-current .item{border: 1px dashrgb(128, 128, 128)ccc !important;}
 
 .sliderSml .slick-slide{padding-right:10px;}
 .sliderSml .slick-slide .item{border-radius: 7px !important; overflow: hidden;}
 
 .sliderSml *,.sliderBig *{transition: all 0.2s !important;}
 .sliderBig .item{overflow: hidden; border-radius: 7px; border: 2px dashed #ccc !important;}
 .sliderSml .item{overflow: hidden; border-radius: 7px; border: 2px dashed #ccc !important;
 cursor: pointer;}
 
 .productDetailsSEction .productInfo .icon{width: 28%; flex: 0 0 28%;}
-body.light .productDetailsSEction .productInfo .icon svg{color: #5e5d72 !important;}
+body.light .productDetailsSEction .productInfo .icon svg{color: var(--muted-text) !important;}
 .productDetailsSEction .productInfo .icon svg{font-size: 22px;}
 .productDetailsSEction .productInfo .name{width: 72%; flex: 0 0 72%; font-weight: 600;
 font-size: 15px; color: rgba(255,255,255,0.8) !important;}
 
-body.light .productDetailsSEction .productInfo .name{color: #5e5d72 !important;}
+body.light .productDetailsSEction .productInfo .name{color: var(--muted-text) !important;}
 
 .productDetailsSEction .productInfo .row{margin-bottom: 10px !important;}
 .productDetailsSEction .productInfo .row .col-sm-9{display: flex; align-items: center;}
 .productDetailsSEction .productInfo .row .col-sm-9 span{ opacity: 0.8; font-size: 15px;
 padding-left: 20px;}
 
 
 .productDetailsSEction .productInfo .row .col-sm-9 span .row{margin-bottom: 0px !important;}
 
 .tags{ margin-bottom:0px !important; padding-left: 8px;}
 .tags li span{ display: flex; align-items: center; justify-content: center; background: #121d37 !important; border-radius: 5px !important; font-size: 12px !important; padding: 3px 10px !important;}
 
 
 .tags li{margin: 3px 5px !important;}
 
 body.light .tags li span{background: #d8d8d8 !important; color: #000 !important; padding: 4px 10px !important;}
 
 
 .ratingSection{width: 500px;}
 .ratingSection .ratingrow{width: 100%; margin-bottom: 15px !important;}
 .ratingSection .ratingrow .progress{height: 5px !important; background-color: #000 !important;}
 .ratingSection .ratingrow .progress .progress-bar{background: #edb213 !important;}
 
 body.light .ratingSection .ratingrow .progress{background: #ccc !important;}
 
 .ratingSection .ratingrow .col1{width: 15%; flex: 0 0 15%; display: flex;}
 .ratingSection .ratingrow .col2{width: 50%; flex: 0 0 50%;}
 .ratingSection .ratingrow .col3{width: 25%; flex: 0 0 25%; display: flex; padding-left: 20px;}
 
 .reviewsSecrion{width: 100%; display: flex; flex-direction: column;}
-.reviewsSecrion .reviewsRow{width: 100%; height: auto; background: #071739; padding: 35px; border-radius: 10px; margin: 15px 0px;}
+.reviewsSecrion .reviewsRow{width: 100%; height: auto; background: var(--body-dark-bg); padding: 35px; border-radius: 10px; margin: 15px 0px;}
 
 body.light .reviewsSecrion .reviewsRow{background: #ededed !important;}
 
 .userInfo h6{margin-bottom: 0px;}
 
 .reviewsSecrion .reviewsRow p{padding-left: 20px;}
 
 .reviewsSecrion .reviewsRow.reply{width: 90%; margin-left: auto;}
 
 .reviewsSecrion .reviewsRow .btn-big{font-size: 14px !important; padding: 7px 20px !important;}
 
 .reviewsSecrion .reviewsRow .btn-big svg{font-size: 18px !important;}
 
 .reviewForm{width: 100%;}
 .reviewForm textarea{width: 100%; height: 200px; background: #132345  !important; outline: navajowhite !important; padding: 15px; border-radius: 10px; color: rgba(255,255,255,0.7);
 border: 1px solid #0d1a36 !important;}
 
 body.light .reviewForm textarea{background: #f4f4f4  !important; color: rgba(0,0,0,0.8) !important; border: 1px solid #dbdbdb !important;}
 
 .reviewForm textarea::-webkit-input-placeholder{color: rgba(255,255,255,0.5);}
 body.light .reviewForm textarea::-webkit-input-placeholder{color: rgba(0,0,0,0.5);}
 
 body.dark .css-3dzjca-MuiPaper-root-MuiPopover-paper-MuiMenu-paper{background: #2b3c5f !important;}
 
 .form .form-group{margin-bottom: 25px;}
@@ -554,83 +585,83 @@ form .form-group h6{font-weight: 600;}
 .imgGrid .img{width: 47%; height: 100px; overflow: hidden; border-radius: 7px;}
 .imgGrid .img img{width: 100%; height:100%; object-fit: cover;}
 
 .inputBtn button{position: absolute; top: 7px; right: 10px; z-index: 100;}
 
 .imgUploadBox{width: 100%; flex-wrap: nowrap; gap: 10px;}
 .imgUploadBox .uploadBox{width: 150px; height: 150px !important; padding: 0px; border-radius: 10px; border: 1px dashed  rgba(0,0,0,0.3); position:relative ; display: flex; align-items: center; justify-content: center; cursor: pointer; background: #fafafa; transition: all 0.3s;}
  
 .imgUploadBox .uploadBox .box{width: 100%; height: 150px !important; overflow: hidden; border-radius: 7px; position: relative;}
 .imgUploadBox .uploadBox .box .lazy-load-image-background{height: 100% !important; width: 100% !important;}
 
 .imgUploadBox .uploadBox .progressBar .MuiCircularProgress-root{width: 30px !important; height: 30px !important;}
 .imgUploadBox .uploadBox .progressBar span{font-size: 14px;}
 
 body.dark .imgUploadBox .uploadBox{background: #2b3c5f   ;}
 body.dark .imgUploadBox .uploadBox *{color: rgba(255,255,255,0.7) !important;}
 
 .imgUploadBox .uploadBox .remove{position: absolute; top: -7px; right: -7px; display: flex; align-items: center; justify-content: center; width: 20px; height: 20px; background: #d32f2f; border-radius: 50%; cursor: pointer; z-index: 100;}
 
 .imgUploadBox .uploadBox .remove svg{font-size: 18px; color: #fff;}
 
 
 .imgUploadBox .uploadBox .MuiBox-root{position: absolute; }
 
 
-.imgUploadBox .uploadBox:hover{background: #f1f1f1;}
+.imgUploadBox .uploadBox:hover{background: var(--gray-light);}
 
 body.dark .imgUploadBox .uploadBox{border: 1px dashed  rgba(255,255,255,0.2);}
 
 .imgUploadBox .uploadBox img{height: 100%; object-fit: cover;}
 .imgUploadBox .uploadBox input{position: absolute; width: 100%; height: 100%; opacity: 0;}
 
 .imgUploadBox .uploadBox .info{display: flex; align-items: center;
   justify-content: center; flex-direction: column; pointer-events: none;}
   .imgUploadBox .uploadBox .info svg{font-size: 50px; opacity: 0.2;}
   .imgUploadBox .uploadBox .info h5{font-size: 15px; text-align: center; opacity: 0.5;}
 
   button.notAllow{cursor: no-drop !important;}
 
   form .btn-blue{position: relative; z-index: 100;}
 
   .btn-blue svg{color: #fff !important;}
 
   .badge{ padding: 4px; font-size: 13px; font-weight: 400; color:maroon}
 
 button .MuiCircularProgress-root{width: 30px !important; height: 30px !important;}
  body.dark button svg{color: #fff !important;}
 
   
  .productModal .actions button{opacity:  1 !important;}
  .productModal .actions button svg.text-danger{color: #ed174a  !important; opacity: 1 !important;}
 
 .productModal .MuiPaper-elevation{ padding: 25px; position: relative; max-width: 900px !important; width: 900px !important;}
 
 .productModal h4{font-size: 20px !important; color: rgba(0,0,0,0.8) !important;}
 
 
-.close_{position: absolute !important; top: 10px; right: 10px; color: #000 !important; min-width: 40px !important; width: 40px !important; height: 40px !important; border-radius: 50% !important; background: #f1f1f1 !important;}
+.close_{position: absolute !important; top: 10px; right: 10px; color: #000 !important; min-width: 40px !important; width: 40px !important; height: 40px !important; border-radius: 50% !important; background: var(--gray-light) !important;}
 
 .close_ svg{font-size: 22px; color: #000 !important; opacity: 0.7;}
 body.dark .close_ svg{font-size: 22px; color: #000 !important; opacity: 0.7;}
 
 .orderTable th,.orderTable td{white-space: nowrap;}
 
 .orderTable .img{width: 70px; height: 40px; overflow: hidden;}
 .orderTable .img img{width: 100%;}
 
 .orderTable td .text-blue{white-space: nowrap !important;}
 
 .cursor{cursor: pointer;}
 
 
 
 .productZoom{ width: 100%; height: auto;  padding: 0px; overflow: hidden; border-radius: 15px;}
 .productZoom .badge{position: absolute; top: 20px; left: 20px; z-index: 100;}
 .zoomSliderBig{width: 100% !important;}
 .productZoomBig{height: 350px; overflow: hidden;}
 
 .productDetails .productZoomBig{height: 350px !important;}
 
 .zoomSlider{padding-top: 30px;}
 .zoomSlider *{outline: none !important;}
 .zoomSlider .item{border: 2px solid transparent !important; overflow: hidden; border-radius: 8px; cursor: pointer; height: 70px !important;}
@@ -660,125 +691,126 @@ body.light .countryDrop .label{border: 1px solid rgba(0,0,0,0.2) !important; }
 
 .countryDrop .name{font-size: 14px !important; text-transform: capitalize !important; color: rgba(255,255,255,0.8) !important; font-weight: 500;  line-height: 16px;}
 
 .countryDrop span.ml-auto svg{opacity: 0.7;}
 
 .close{opacity: 1 !important;}
 .closeSearch{display: none;}
 
 
 
 .locationModal .MuiPaper-elevation{ padding: 25px; position: relative;}
 .locationModal .MuiPaper-elevation h4{font-size: 18px; font-weight: 600;}
 .locationModal .MuiPaper-elevation p{font-size: 13px;}
 
 .locationModal .countryList{ margin-bottom: 0px; max-height: 400px; overflow-y: scroll; overflow-x: hidden;}
 .locationModal .countryList li{width: 100%; list-style: none;}
 .locationModal .countryList li button{width: 100%; text-transform: capitalize !important;
 color: #000 !important; justify-content: flex-start !important;
  padding: 10px 20px !important; font-weight: 500 !important;}
 
 body.dark .locationModal .countryList li button{color: #fff !important;}
 
 .locationModal .countryList li button:hover{background: rgba(255,255,255,0.1);}
 .locationModal .countryList li button.active{background: #1976d2 !important; color: #fff !important;}
 
-.close_{position: absolute !important; top: 10px; right: 10px; color: #000 !important; min-width: 40px !important; width: 40px !important; height: 40px !important; border-radius: 50% !important; background: #f1f1f1 !important;}
+.close_{position: absolute !important; top: 10px; right: 10px; color: #000 !important; min-width: 40px !important; width: 40px !important; height: 40px !important; border-radius: 50% !important; background: var(--gray-light) !important;}
 
 .close_ svg{font-size: 22px; color: #000 !important; opacity: 0.7;}
 
 
 .headerSearchWrapper{width: 58%;}
-.headerSearch{width: 90%; height: 50px; background: #e7e7e7; padding: 5px; position: relative; border-radius: 5px; border: 1px solid rgba(0,0,0,0.050);} 
+.headerSearch{width: 90%; height: 50px; background: var(--search-bg); padding: 5px; position: relative; border-radius: 5px; border: 1px solid rgba(0,0,0,0.050);} 
 .headerSearch input{background: transparent !important; outline: none !important;
 font-size: 16px; color: rgba(0,0,0,0.7); width: 100%; height: 37px; border: 0px !important;
 padding: 0px 20px !important;}
 
 .headerSearch input::-webkit-input-placeholder{color: rgba(0,0,0,0.4);}
 
 .headerSearch  button{position: absolute; top: 5px; right: 10px; z-index: 100; min-width: 40px !important; height: 40px !important; width: 40px !important; border-radius: 50% !important; color: #000;}
 .headerSearch  button svg,header .part3 .circle svg{font-size: 25px; opacity: 0.8; color: #000 !important;}
 
 .headerSearch  button .MuiCircularProgress-root{width: 25px !important; height: 25px !important;}
 
 body.dark .headerSearch button svg{color: #000 !important;}
 
 .addBtn{min-width: 30px !important; height: 30px !important;}
 
 .rti--container{background: #2b3c5f !important; border: 0px !important;}
 .rti--tag{background: #364e7d !important;}
 .rti--tag button{color: #fff !important;}
 
 
 
 body.dark .MuiInputBase-root, body.dark .MuiSvgIcon-root, body.dark .css-1yk1gt9-MuiInputBase-root-MuiOutlinedInput-root-MuiSelect-root, body.dark h1, body.dark h2, body.dark h3, body.dark h4, body.dark h5, body.dark h6, body.dark p{color:rgba(255,255,255,0.8) !important;}
 
 body.dark .MuiInputBase-root fieldset{border-color:rgba(255,255,255,0.4) !important}
-body.dark .MuiMenu-paper{background-color: #12254e !important;}
+body.dark .MuiMenu-paper{background-color: var(--dark-secondary-bg) !important;}
 
 body.dark .MuiOutlinedInput-notchedOutline{border-color: rgba(255,255,255,0.4) !important;}
 
 body.dark .MuiPaginationItem-root{color: rgba(255,255,255,0.8) !important;}
 
-body.dark .MuiDialog-paper{background-color: #12254e !important;}
+body.dark .MuiDialog-paper{background-color: var(--dark-secondary-bg) !important;}
 
 
 input[type=number]::-webkit-inner-spin-button, 
 input[type=number]::-webkit-outer-spin-button { 
     -webkit-appearance: none;
     -moz-appearance: none;
     appearance: none;
     margin: 0; 
 }
 
 
 
 .myAccountPage .MuiTab-root{font-weight: 600 !important;}
 
 .myAccBox{padding: 25px 0px; background: #fff; border-radius: 10px; }
 
 
 
 
-.userImage{width: 140px; height: 140px; overflow: hidden; border-radius: 100%; border: 2px solid #0858f7; position: relative;}
+.userImage{width: 140px; height: 140px; overflow: hidden; border-radius: 100%; border: 2px solid var(--primary-color); position: relative;}
 .userImage img{width: 100%; height: 100%; object-fit: cover;}
 .userImage .overlay{width: 100%; height: 100%; position: absolute; top: 0px; left: 0px; background: rgba(0,0,0,0.6); z-index: 1000; cursor: pointer;transition: all 0.2s ease-in-out; opacity: 0;}
 
 .userImage .overlay svg{font-size: 40px; color: #fff;}
 .userImage:hover .overlay{opacity: 1;}
 .userImage .overlay input{position: absolute; top: 0px; left: 0px; width: 100%; height: 100%; z-index: 1000; opacity: 0;}
 
 
 .myAccBox .form-group{margin-bottom: 20px;}
-.myAccBox .form-group .MuiOutlinedInput-input{background: #f1f1f1 !important;}
+.myAccBox .form-group .MuiOutlinedInput-input{background: var(--gray-light) !important;}
 
 .overlayPreview{
   position:absolute;
   color:#fff;
   background:rgba(0,0,0,0.5);
   padding:4px 8px;
   font-size:13px;
   border-radius:4px;
   display:flex;
   flex-direction:column;
   align-items:center;
   justify-content:center;
   z-index:50;
 }
 .overlayPreview .cta{
   margin-top:4px;
   padding:2px 6px;
   background:#1976d2;
   color:#fff;
   border-radius:3px;
   text-decoration:none;
   font-size:12px;
 }
 .position-top-left{top:5px;left:5px;}
 .position-top-center{top:5px;left:50%;transform:translateX(-50%);}
 .position-top-right{top:5px;right:5px;}
 .position-center-left{top:50%;left:5px;transform:translateY(-50%);}
 .position-center{top:50%;left:50%;transform:translate(-50%,-50%);}
 .position-center-right{top:50%;right:5px;transform:translateY(-50%);}
 .position-bottom-left{bottom:5px;left:5px;}
 .position-bottom-center{bottom:5px;left:50%;transform:translateX(-50%);}
 .position-bottom-right{bottom:5px;right:5px;}
+
diff --git a/admin/src/App.js b/admin/src/App.js
index 232717f107106d86c86f20a920e718207be8a4d2..78a351c53dbd4414d9dbeaca39a067cbf4a38553 100644
--- a/admin/src/App.js
+++ b/admin/src/App.js
@@ -1,140 +1,150 @@
 import { BrowserRouter, Route, Routes } from "react-router-dom";
 import "bootstrap/dist/css/bootstrap.min.css";
 import "./App.css";
 import "./responsive.css";
 import Dashboard from "./pages/Dashboard";
 import Header from "./components/Header";
 import Sidebar from "./components/Sidebar";
 import React, { createContext, useEffect, useState, useRef } from "react";
 import Login from "./pages/Login";
 import SignUp from "./pages/SignUp";
 import Products from "./pages/Products";
 import Category from "./pages/Category/categoryList";
 import ProductDetails from "./pages/ProductDetails";
 import ProductUpload from "./pages/Products/addProduct";
 import EditProduct from "./pages/Products/editProduct";
 import CategoryAdd from "./pages/Category/addCategory";
 import EditCategory from "./pages/Category/editCategory";
 import SubCatAdd from "./pages/Category/addSubCat";
 import SubCatList from "./pages/Category/subCategoryList";
 import AddProductRAMS from "./pages/Products/addProductRAMS";
 import ProductWeight from "./pages/Products/addProductWeight";
 import ProductSize from "./pages/Products/addProductSize";
 import Orders from "./pages/Orders";
-import AddHomeBannerSlide from "./pages/HomeBanner/addHomeSlide";
 import HomeBannerSlideList from "./pages/HomeBanner/homeSlideList";
 import EditHomeBannerSlide from "./pages/HomeBanner/editSlide";
 import Snackbar from "@mui/material/Snackbar";
 import Alert from "@mui/material/Alert";
 
 import LoadingBar from "react-top-loading-bar";
 import { fetchDataFromApi } from "./utils/api";
 
 import axios from "axios";
+import logger from "./utils/logger";
 import BannersList from "./pages/Banners/bannerList";
-import AddBanner from "./pages/Banners/addHomeBanner";
 import EditBanner from "./pages/Banners/editHomeBanner";
 
 import HomeSideBannersList from "./pages/HomeSideBanners/bannerList";
-import AddHomeSideBanner from "./pages/HomeSideBanners/addHomeSideBanner";
 import EditHomeSideBanner from "./pages/HomeSideBanners/editHomeSideBanner";
 
 import HomeBottomBannersList from "./pages/HomeBottomBanners/bannerList";
-import AddHomeBottomBanner from "./pages/HomeBottomBanners/addHomeBottomBanner";
 import EditHomeBottomBanner from "./pages/HomeBottomBanners/editHomeBottomBanner";
 import AppSettingsList from "./pages/AppSettings/list";
-import AddAppSetting from "./pages/AppSettings/add";
 import EditAppSetting from "./pages/AppSettings/edit";
 import MyAccount from "./pages/MyAccount";
 import Notifications from "./pages/Notifications";
 
 const MyContext = createContext();
 
 function App() {
   const [isToggleSidebar, setIsToggleSidebar] = useState(false);
   const [isLogin, setIsLogin] = useState(false);
   const [isHideSidebarAndHeader, setisHideSidebarAndHeader] = useState(false);
   const [theme, setTheme] = useState(
     localStorage.getItem("theme") ? localStorage.getItem("theme") : "light"
   );
   const [windowWidth, setWindowWidth] = useState(window.innerWidth);
   const [catData, setCatData] = useState([]);
   const [user, setUser] = useState({
     name: "",
     email: "",
     userId: "",
   });
 
   const [isOpenNav, setIsOpenNav] = useState(false);
 
   const [baseUrl, setBaseUrl] = useState("http://localhost:4000");
 
   const [progress, setProgress] = useState(0);
   const [alertBox, setAlertBox] = useState({
     msg: "",
     error: false,
     open: false,
   });
 
   const [selectedLocation, setSelectedLocation] = useState("");
   const [countryList, setCountryList] = useState([]);
   const [selectedCountry, setselectedCountry] = useState("");
 
   useEffect(() => {
     if (theme === "dark") {
       document.body.classList.add("dark");
       document.body.classList.remove("light");
       localStorage.setItem("theme", "dark");
     } else {
       document.body.classList.add("light");
       document.body.classList.remove("dark");
       localStorage.setItem("theme", "light");
     }
   }, [theme]);
 
   useEffect(() => {
-    const token = localStorage.getItem("token");
+    const handleResize = () => setWindowWidth(window.innerWidth);
+    window.addEventListener("resize", handleResize);
+    return () => window.removeEventListener("resize", handleResize);
+  }, []);
 
-    if (token !== "" && token !== undefined && token !== null) {
+  useEffect(() => {
+    const token = localStorage.getItem("token");
+    if (token) {
       setIsLogin(true);
-
       const userData = JSON.parse(localStorage.getItem("user"));
       setUser(userData);
     } else {
       setIsLogin(false);
     }
-  }, [isLogin, localStorage.getItem("user")]);
+  }, [isLogin]);
 
   useEffect(() => {
-    getCountry("https://countriesnow.space/api/v0.1/countries/");
+    const controller = new AbortController();
+    getCountry(
+      "https://countriesnow.space/api/v0.1/countries/",
+      controller.signal
+    );
+    return () => controller.abort();
   }, []);
 
-  const getCountry = async (url) => {
-    const responsive = await axios.get(url).then((res) => {
+  const getCountry = async (url, signal) => {
+    try {
+      const res = await axios.get(url, { signal });
       setCountryList(res.data.data);
-    });
+    } catch (err) {
+      if (err.name !== "CanceledError") {
+        logger.error(err);
+      }
+    }
   };
 
   const handleClose = (event, reason) => {
     if (reason === "clickaway") {
       return;
     }
 
     setAlertBox({
       open: false,
     });
   };
 
   useEffect(() => {
     setProgress(20);
     fetchCategory();
   }, []);
 
   const fetchCategory = () => {
     fetchDataFromApi("/api/category").then((res) => {
       setCatData(res);
       setProgress(100);
     });
   };
 
   const openNav = () => {
@@ -158,50 +168,51 @@ function App() {
     fetchCategory,
     setUser,
     user,
     countryList,
     selectedCountry,
     setselectedCountry,
     windowWidth,
     openNav,
     setIsOpenNav
   };
 
   return (
     <BrowserRouter>
       <MyContext.Provider value={values}>
         <LoadingBar
           color="#f11946"
           progress={progress}
           onLoaderFinished={() => setProgress(0)}
           className="topLoadingBar"
         />
 
         <Snackbar
           open={alertBox.open}
           autoHideDuration={6000}
           onClose={handleClose}
+          anchorOrigin={{ vertical: "top", horizontal: "center" }}
         >
           <Alert
             onClose={handleClose}
             autoHideDuration={6000}
             severity={alertBox.error === false ? "success" : "error"}
             variant="filled"
             sx={{ width: "100%" }}
           >
             {alertBox.msg}
           </Alert>
         </Snackbar>
 
         {isHideSidebarAndHeader !== true && <Header />}
         <div className="main d-flex">
           {isHideSidebarAndHeader !== true && (
             <>
               <div
                 className={`sidebarOverlay d-none ${
                   isOpenNav === true && "show"
                 }`}
                 onClick={() => setIsOpenNav(false)}
               ></div>
               <div
                 className={`sidebarWrapper ${
                   isToggleSidebar === true ? "toggle" : ""
@@ -254,79 +265,71 @@ function App() {
                 exact={true}
                 element={<SubCatList />}
               />
               <Route
                 path="/subCategory/add"
                 exact={true}
                 element={<SubCatAdd />}
               />
               <Route
                 path="/productRAMS/add"
                 exact={true}
                 element={<AddProductRAMS />}
               />
               <Route
                 path="/productWEIGHT/add"
                 exact={true}
                 element={<ProductWeight />}
               />
               <Route
                 path="/productSIZE/add"
                 exact={true}
                 element={<ProductSize />}
               />
               <Route path="/orders/" exact={true} element={<Orders />} />
               <Route
-                path="/homeBannerSlide/add"
-                exact={true}
-                element={<AddHomeBannerSlide />}
-              />
-              <Route
-                path="/homeBannerSlide/list"
+                path="/homeBannerSlide"
                 exact={true}
                 element={<HomeBannerSlideList />}
               />
               <Route
                 path="/homeBannerSlide/edit/:id"
                 exact={true}
                 element={<EditHomeBannerSlide />}
               />
 
               <Route path="/banners" exact={true} element={<BannersList />} />
-              <Route path="/banners/add" exact={true} element={<AddBanner />} />
               <Route
                 path="/banners/edit/:id"
                 exact={true}
                 element={<EditBanner />}
               />
 
               <Route path="/homeSideBanners" exact={true} element={<HomeSideBannersList />} />
-              <Route path="/homeSideBanners/add" exact={true} element={<AddHomeSideBanner />} />
               <Route
                 path="/homeSideBanners/edit/:id"
                 exact={true}
                 element={<EditHomeSideBanner />}
               />
 
               <Route path="/homeBottomBanners" exact={true} element={<HomeBottomBannersList />} />
-              <Route path="/homeBottomBanners/add" exact={true} element={<AddHomeBottomBanner />} />
               <Route
                 path="/homeBottomBanners/edit/:id"
                 exact={true}
                 element={<EditHomeBottomBanner />}
               />
               <Route path="/appSettings" exact={true} element={<AppSettingsList />} />
-              <Route path="/appSettings/add" exact={true} element={<AddAppSetting />} />
               <Route path="/appSettings/edit/:id" exact={true} element={<EditAppSetting />} />
               <Route exact={true} path="/my-account" element={<MyAccount />} />
               <Route exact={true} path="/notifications" element={<Notifications />} />
 
             </Routes>
           </div>
         </div>
       </MyContext.Provider>
     </BrowserRouter>
   );
 }
 
 export default App;
 export { MyContext };
+
diff --git a/admin/src/components/Sidebar/index.js b/admin/src/components/Sidebar/index.js
index 9010954b0bb26b4c94df7febb12fb4c0fc6daee0..0ff32290ec54cfbf91024343dc792502c6db699c 100644
--- a/admin/src/components/Sidebar/index.js
+++ b/admin/src/components/Sidebar/index.js
@@ -78,64 +78,54 @@ const Sidebar = () => {
               className={`w-100 ${
                 activeTab === 1 && isToggleSubmenu === true ? "active" : ""
               }`}
               onClick={() => isOpenSubmenu(1)}
             >
               <span className="icon">
                 <TbSlideshow />
               </span>
               Home Banner Slides
               <span className="arrow">
                 <FaAngleRight />
               </span>
             </Button>
             <div
               className={`submenuWrapper ${
                 activeTab === 1 && isToggleSubmenu === true
                   ? "colapse"
                   : "colapsed"
               }`}
             >
               <ul className="submenu">
                 <li>
                   <NavLink
                     exact
                     activeClassName="is-active"
-                    to="/homeBannerSlide/add"
+                    to="/homeBannerSlide"
                     onClick={() => context.setIsOpenNav(false)}
                   >
-                    Add Home Banner Slide
-                  </NavLink>
-                </li>
-                <li>
-                  <NavLink
-                    exact
-                    activeClassName="is-active"
-                    to="/homeBannerSlide/list"
-                    onClick={() => context.setIsOpenNav(false)}
-                  >
-                    Home Slides List
+                    Home Slides
                   </NavLink>
                 </li>
               </ul>
             </div>
           </li>
 
           <li>
             <Button
               className={`w-100 ${
                 activeTab === 2 && isToggleSubmenu === true ? "active" : ""
               }`}
               onClick={() => isOpenSubmenu(2)}
             >
               <span className="icon">
                 <BiSolidCategory />
               </span>
               Category
               <span className="arrow">
                 <FaAngleRight />
               </span>
             </Button>
             <div
               className={`submenuWrapper ${
                 activeTab === 2 && isToggleSubmenu === true
                   ? "colapse"
@@ -289,156 +279,125 @@ const Sidebar = () => {
               </span>
               Home Banners
               <span className="arrow">
                 <FaAngleRight />
               </span>
             </Button>
             <div
               className={`submenuWrapper ${
                 activeTab === 5 && isToggleSubmenu === true
                   ? "colapse"
                   : "colapsed"
               }`}
             >
               <ul className="submenu">
                 <li>
                   <NavLink
                     exact
                     activeClassName="is-active"
                     to="/banners"
                     onClick={() => context.setIsOpenNav(false)}
                   >
                     Banners List
                   </NavLink>
                 </li>
 
-                <li>
-                  <NavLink
-                    exact
-                    activeClassName="is-active"
-                    to="/banners/add"
-                    onClick={() => context.setIsOpenNav(false)}
-                  >
-                    Banner Upload
-                  </NavLink>
-                </li>
               </ul>
             </div>
           </li>
 
           <li>
             <Button
               className={`w-100 ${
                 activeTab === 6 && isToggleSubmenu === true ? "active" : ""
               }`}
               onClick={() => isOpenSubmenu(6)}
             >
               <span className="icon">
                 <TbSlideshow />
               </span>
               Home Side Banners
               <span className="arrow">
                 <FaAngleRight />
               </span>
             </Button>
             <div
               className={`submenuWrapper ${
                 activeTab === 6 && isToggleSubmenu === true
                   ? "colapse"
                   : "colapsed"
               }`}
             >
               <ul className="submenu">
                 <li>
                   <NavLink
                     exact
                     activeClassName="is-active"
                     to="/homeSideBanners"
                     onClick={() => context.setIsOpenNav(false)}
                   >
                     Banners List
                   </NavLink>
                 </li>
-
-                <li>
-                  <NavLink
-                    exact
-                    activeClassName="is-active"
-                    to="/homeSideBanners/add"
-                    onClick={() => context.setIsOpenNav(false)}
-                  >
-                    Banner Upload
-                  </NavLink>
-                </li>
               </ul>
             </div>
           </li>
 
           <li>
             <Button
               className={`w-100 ${
                 activeTab === 7 && isToggleSubmenu === true ? "active" : ""
               }`}
               onClick={() => isOpenSubmenu(7)}
             >
               <span className="icon">
                 <TbSlideshow />
               </span>
               Home Bottom Banners
               <span className="arrow">
                 <FaAngleRight />
               </span>
             </Button>
             <div
               className={`submenuWrapper ${
                 activeTab === 7 && isToggleSubmenu === true
                   ? "colapse"
                   : "colapsed"
               }`}
             >
               <ul className="submenu">
                 <li>
                   <NavLink
                     exact
                     activeClassName="is-active"
                     to="/homeBottomBanners"
                     onClick={() => context.setIsOpenNav(false)}
                   >
                     Banners List
                   </NavLink>
                 </li>
 
-                <li>
-                  <NavLink
-                    exact
-                    activeClassName="is-active"
-                    to="/homeBottomBanners/add"
-                    onClick={() => context.setIsOpenNav(false)}
-                  >
-                    Banner Upload
-                  </NavLink>
-                </li>
               </ul>
             </div>
           </li>
           <li>
             <NavLink
               exact
               activeClassName="is-active"
               to="/appSettings"
               onClick={() => {
                 setActiveTab(8);
                 context.setIsOpenNav(false);
               }}
             >
               <Button className={`w-100 ${activeTab === 8 ? "active" : ""}`}> 
                 <span className="icon">
                   <IoIosSettings />
                 </span>
                 App Settings
           <li>
             <NavLink exact activeClassName="is-active" to="/notifications">
               <Button className="w-100" onClick={() => context.setIsOpenNav(false)}>
                 <span className="icon">
                   <FaBell />
                 </span>
                 Notifications
diff --git a/admin/src/pages/AppSettings/add.js b/admin/src/pages/AppSettings/add.js
index 402c818ddc91403bb933e09981713d0caee3fbed..10e08744756e91dee01396c3f8572f70f8fb98e5 100644
--- a/admin/src/pages/AppSettings/add.js
+++ b/admin/src/pages/AppSettings/add.js
@@ -1,95 +1,110 @@
 import React, { useContext, useState } from "react";
 import Button from "@mui/material/Button";
 import Switch from "@mui/material/Switch";
 import FormControlLabel from "@mui/material/FormControlLabel";
 import { postData } from "../../utils/api";
 import { useNavigate } from "react-router-dom";
 import { MyContext } from "../../App";
+import logger from "../../utils/logger";
 
-const AddAppSetting = () => {
+const AddAppSetting = ({ onSuccess }) => {
   const [formFields, setFormFields] = useState({
     name: "",
     prelogin: false,
     postlogin: false,
     desktop: false,
     mobile: false,
   });
 
   const context = useContext(MyContext);
   const history = useNavigate();
 
   const submitForm = () => {
-    postData("/api/appSettings/create", formFields).then(() => {
-      context.setAlertBox({ open: true, error: false, msg: "Created!" });
-      history("/appSettings");
-    });
+    postData("/api/appSettings/create", formFields)
+      .then(() => {
+        context.setAlertBox({ open: true, error: false, msg: "Created!" });
+        if (onSuccess) {
+          onSuccess();
+        } else {
+          history("/appSettings");
+        }
+      })
+      .catch((err) => {
+        logger.error(err);
+        context.setAlertBox({ open: true, error: true, msg: "Failed to create" });
+      });
   };
 
   return (
     <div className="right-content w-100">
-      <h5 className="mb-4">Add App Setting</h5>
-      <div className="form-group mb-3">
+      <div className="card shadow border-0 w-100 flex-row p-4 mt-2">
+        <h5 className="mb-0">Add App Setting</h5>
+      </div>
+      <div className="card p-4 mt-0">
+        <div className="form-group mb-3">
         <label>Name</label>
         <input
           type="text"
           className="form-control"
           value={formFields.name}
           onChange={(e) => setFormFields({ ...formFields, name: e.target.value })}
         />
       </div>
-      <FormControlLabel
-        control={
-          <Switch
-            checked={formFields.prelogin}
-            onChange={(e) =>
-              setFormFields({ ...formFields, prelogin: e.target.checked })
-            }
-          />
-        }
-        label="Pre Login"
-        className="form-check"
-      />
-      <FormControlLabel
-        control={
-          <Switch
-            checked={formFields.postlogin}
-            onChange={(e) =>
-              setFormFields({ ...formFields, postlogin: e.target.checked })
-            }
-          />
-        }
-        label="Post Login"
-        className="form-check"
-      />
-      <FormControlLabel
-        control={
-          <Switch
-            checked={formFields.desktop}
-            onChange={(e) =>
-              setFormFields({ ...formFields, desktop: e.target.checked })
-            }
-          />
-        }
-        label="Desktop"
-        className="form-check"
-      />
-      <FormControlLabel
-        control={
-          <Switch
-            checked={formFields.mobile}
-            onChange={(e) =>
-              setFormFields({ ...formFields, mobile: e.target.checked })
-            }
-          />
-        }
-        label="Mobile"
-        className="form-check mb-4"
-      />
-      <Button variant="contained" onClick={submitForm}>
-        Submit
-      </Button>
+        <FormControlLabel
+          control={
+            <Switch
+              checked={formFields.prelogin}
+              onChange={(e) =>
+                setFormFields({ ...formFields, prelogin: e.target.checked })
+              }
+            />
+          }
+          label="Pre Login"
+          className="form-check"
+        />
+        <FormControlLabel
+          control={
+            <Switch
+              checked={formFields.postlogin}
+              onChange={(e) =>
+                setFormFields({ ...formFields, postlogin: e.target.checked })
+              }
+            />
+          }
+          label="Post Login"
+          className="form-check"
+        />
+        <FormControlLabel
+          control={
+            <Switch
+              checked={formFields.desktop}
+              onChange={(e) =>
+                setFormFields({ ...formFields, desktop: e.target.checked })
+              }
+            />
+          }
+          label="Desktop"
+          className="form-check"
+        />
+        <FormControlLabel
+          control={
+            <Switch
+              checked={formFields.mobile}
+              onChange={(e) =>
+                setFormFields({ ...formFields, mobile: e.target.checked })
+              }
+            />
+          }
+          label="Mobile"
+          className="form-check mb-4"
+        />
+        <Button variant="contained" onClick={submitForm}>
+          Submit
+        </Button>
+      </div>
     </div>
   );
 };
 
 export default AddAppSetting;
+
diff --git a/admin/src/pages/AppSettings/edit.js b/admin/src/pages/AppSettings/edit.js
index ac9d3794aa8eec4527792094c2ee1807cd542089..1a7ba525ede53fbe5b34c8afc0becf067b1c3cc8 100644
--- a/admin/src/pages/AppSettings/edit.js
+++ b/admin/src/pages/AppSettings/edit.js
@@ -1,102 +1,118 @@
 import React, { useContext, useEffect, useState } from "react";
 import Button from "@mui/material/Button";
 import Switch from "@mui/material/Switch";
 import FormControlLabel from "@mui/material/FormControlLabel";
 import { fetchDataFromApi, editData } from "../../utils/api";
 import { useNavigate, useParams } from "react-router-dom";
 import { MyContext } from "../../App";
+import logger from "../../utils/logger";
 
 const EditAppSetting = () => {
   const { id } = useParams();
   const [formFields, setFormFields] = useState({
     name: "",
     prelogin: false,
     postlogin: false,
     desktop: false,
     mobile: false,
   });
 
   const context = useContext(MyContext);
   const history = useNavigate();
 
   useEffect(() => {
-    fetchDataFromApi(`/api/appSettings/${id}`).then((res) => {
-      if (res) setFormFields(res);
-    });
+    let isMounted = true;
+    fetchDataFromApi(`/api/appSettings/${id}`)
+      .then((res) => {
+        if (isMounted && res) setFormFields(res);
+      })
+      .catch((err) => logger.error(err));
+    return () => {
+      isMounted = false;
+    };
   }, [id]);
 
   const submitForm = () => {
-    editData(`/api/appSettings/${id}`, formFields).then(() => {
-      context.setAlertBox({ open: true, error: false, msg: "Updated!" });
-      history("/appSettings");
-    });
+    editData(`/api/appSettings/${id}`, formFields)
+      .then(() => {
+        context.setAlertBox({ open: true, error: false, msg: "Updated!" });
+        history("/appSettings");
+      })
+      .catch((err) => {
+        logger.error(err);
+        context.setAlertBox({ open: true, error: true, msg: "Failed to update" });
+      });
   };
 
   return (
     <div className="right-content w-100">
-      <h5 className="mb-4">Edit App Setting</h5>
-      <div className="form-group mb-3">
+      <div className="card shadow border-0 w-100 flex-row p-4 mt-2">
+        <h5 className="mb-0">Edit App Setting</h5>
+      </div>
+      <div className="card p-4 mt-0">
+        <div className="form-group mb-3">
         <label>Name</label>
         <input
           type="text"
           className="form-control"
           value={formFields.name}
           onChange={(e) => setFormFields({ ...formFields, name: e.target.value })}
         />
       </div>
-      <FormControlLabel
-        control={
-          <Switch
-            checked={formFields.prelogin}
-            onChange={(e) =>
-              setFormFields({ ...formFields, prelogin: e.target.checked })
-            }
-          />
-        }
-        label="Pre Login"
-        className="form-check"
-      />
-      <FormControlLabel
-        control={
-          <Switch
-            checked={formFields.postlogin}
-            onChange={(e) =>
-              setFormFields({ ...formFields, postlogin: e.target.checked })
-            }
-          />
-        }
-        label="Post Login"
-        className="form-check"
-      />
-      <FormControlLabel
-        control={
-          <Switch
-            checked={formFields.desktop}
-            onChange={(e) =>
-              setFormFields({ ...formFields, desktop: e.target.checked })
-            }
-          />
-        }
-        label="Desktop"
-        className="form-check"
-      />
-      <FormControlLabel
-        control={
-          <Switch
-            checked={formFields.mobile}
-            onChange={(e) =>
-              setFormFields({ ...formFields, mobile: e.target.checked })
-            }
-          />
-        }
-        label="Mobile"
-        className="form-check mb-4"
-      />
-      <Button variant="contained" onClick={submitForm}>
-        Update
-      </Button>
+        <FormControlLabel
+          control={
+            <Switch
+              checked={formFields.prelogin}
+              onChange={(e) =>
+                setFormFields({ ...formFields, prelogin: e.target.checked })
+              }
+            />
+          }
+          label="Pre Login"
+          className="form-check"
+        />
+        <FormControlLabel
+          control={
+            <Switch
+              checked={formFields.postlogin}
+              onChange={(e) =>
+                setFormFields({ ...formFields, postlogin: e.target.checked })
+              }
+            />
+          }
+          label="Post Login"
+          className="form-check"
+        />
+        <FormControlLabel
+          control={
+            <Switch
+              checked={formFields.desktop}
+              onChange={(e) =>
+                setFormFields({ ...formFields, desktop: e.target.checked })
+              }
+            />
+          }
+          label="Desktop"
+          className="form-check"
+        />
+        <FormControlLabel
+          control={
+            <Switch
+              checked={formFields.mobile}
+              onChange={(e) =>
+                setFormFields({ ...formFields, mobile: e.target.checked })
+              }
+            />
+          }
+          label="Mobile"
+          className="form-check mb-4"
+        />
+        <Button variant="contained" onClick={submitForm}>
+          Update
+        </Button>
+      </div>
     </div>
   );
 };
 
 export default EditAppSetting;
diff --git a/admin/src/pages/AppSettings/list.js b/admin/src/pages/AppSettings/list.js
index 415f94665fd8f066ea22399460b4c275af6c907c..c1174a35d00f8e05197f5c380644d99012934f35 100644
--- a/admin/src/pages/AppSettings/list.js
+++ b/admin/src/pages/AppSettings/list.js
@@ -1,70 +1,89 @@
 import React, { useEffect, useState, useContext } from "react";
 import { fetchDataFromApi, deleteData, editData } from "../../utils/api";
+import logger from "../../utils/logger";
 import { Link } from "react-router-dom";
 import Button from "@mui/material/Button";
+import AddAppSetting from "./add";
 import Switch from "@mui/material/Switch";
 import { MyContext } from "../../App";
 
 const AppSettingsList = () => {
   const [settings, setSettings] = useState([]);
+  const [showForm, setShowForm] = useState(false);
   const context = useContext(MyContext);
 
   const getData = () => {
-    fetchDataFromApi("/api/appSettings").then((res) => {
-      if (Array.isArray(res)) setSettings(res);
-    });
+    fetchDataFromApi("/api/appSettings")
+      .then((res) => {
+        if (Array.isArray(res)) setSettings(res);
+      })
+      .catch((err) => {
+        logger.error(err);
+        context.setAlertBox({ open: true, error: true, msg: "Failed to load" });
+      });
   };
 
   useEffect(() => {
     getData();
   }, []);
 
   const toggleField = (id, field, current) => {
     const item = settings.find((s) => s.id === id);
     if (!item) return;
     const updated = { ...item, [field]: !current };
-    editData(`/api/appSettings/${id}`, updated).then(() => getData());
+    editData(`/api/appSettings/${id}`, updated)
+      .then(() => getData())
+      .catch((err) => logger.error(err));
   };
 
   const deleteItem = (id) => {
-    deleteData(`/api/appSettings/${id}`).then(() => {
-      context.setAlertBox({ open: true, error: false, msg: "Deleted!" });
-      getData();
-    });
+    deleteData(`/api/appSettings/${id}`)
+      .then(() => {
+        context.setAlertBox({ open: true, error: false, msg: "Deleted!" });
+        getData();
+      })
+      .catch((err) => logger.error(err));
   };
 
   return (
     <div className="right-content w-100">
       <div className="card shadow border-0 w-100 flex-row p-4 align-items-center">
         <h5 className="mb-0">App Settings</h5>
         <div className="ml-auto">
-          <Link to="/appSettings/add">
-            <Button variant="contained">Add Setting</Button>
-          </Link>
+          <Button variant="contained" onClick={() => setShowForm(!showForm)}>
+            {showForm ? "Close" : "Add Setting"}
+          </Button>
         </div>
       </div>
+
+      {showForm && (
+        <div className="card shadow border-0 p-3 mt-4">
+          <AddAppSetting onSuccess={() => { setShowForm(false); getData(); }} />
+        </div>
+      )}
+
       <div className="card shadow border-0 p-3 mt-4">
         <div className="table-responsive mt-3">
           <table className="table table-bordered table-striped">
             <thead className="thead-dark">
               <tr>
                 <th>Name</th>
                 <th>Prelogin</th>
                 <th>Postlogin</th>
                 <th>Desktop</th>
                 <th>Mobile</th>
                 <th>Action</th>
               </tr>
             </thead>
             <tbody>
               {settings.map((item) => (
                 <tr key={item.id}>
                   <td>{item.name}</td>
                   <td>
                     <Switch
                       checked={item.prelogin}
                       onChange={() => toggleField(item.id, "prelogin", item.prelogin)}
                     />
                   </td>
                   <td>
                     <Switch
@@ -80,25 +99,26 @@ const AppSettingsList = () => {
                   </td>
                   <td>
                     <Switch
                       checked={item.mobile}
                       onChange={() => toggleField(item.id, "mobile", item.mobile)}
                     />
                   </td>
                   <td>
                     <Link to={`/appSettings/edit/${item.id}`}>Edit</Link>
                     {" | "}
                     <Button size="small" onClick={() => deleteItem(item.id)}>
                       Delete
                     </Button>
                   </td>
                 </tr>
               ))}
             </tbody>
           </table>
         </div>
       </div>
     </div>
   );
 };
 
 export default AppSettingsList;
+
diff --git a/admin/src/pages/Banners/addHomeBanner.js b/admin/src/pages/Banners/addHomeBanner.js
index 4273898495293eaa1ebecadadc950a82f1a619b7..97dd03da6ec5f8683d167aa5fac90d1b49a08263 100644
--- a/admin/src/pages/Banners/addHomeBanner.js
+++ b/admin/src/pages/Banners/addHomeBanner.js
@@ -1,96 +1,93 @@
 import React from "react";
 import Breadcrumbs from "@mui/material/Breadcrumbs";
 import HomeIcon from "@mui/icons-material/Home";
 import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
 import { emphasize, styled } from "@mui/material/styles";
 import Chip from "@mui/material/Chip";
 import { useContext, useEffect, useState } from "react";
 import { FaCloudUploadAlt } from "react-icons/fa";
 import Button from "@mui/material/Button";
 import MenuItem from "@mui/material/MenuItem";
 import Select from "@mui/material/Select";
 import {
   deleteData,
   deleteImages,
   editData,
   fetchDataFromApi,
   postData,
   uploadImage,
 } from "../../utils/api";
-import { useNavigate } from "react-router-dom";
 import { FaRegImages } from "react-icons/fa";
 import { MyContext } from "../../App";
 
 import CircularProgress from "@mui/material/CircularProgress";
 import { IoCloseSharp } from "react-icons/io5";
 
 import { LazyLoadImage } from "react-lazy-load-image-component";
 import "react-lazy-load-image-component/src/effects/blur.css";
 
 //breadcrumb code
 const StyledBreadcrumb = styled(Chip)(({ theme }) => {
   const backgroundColor =
     theme.palette.mode === "light"
       ? theme.palette.grey[100]
       : theme.palette.grey[800];
   return {
     backgroundColor,
     height: theme.spacing(3),
     color: theme.palette.text.primary,
     fontWeight: theme.typography.fontWeightRegular,
     "&:hover, &:focus": {
       backgroundColor: emphasize(backgroundColor, 0.06),
     },
     "&:active": {
       boxShadow: theme.shadows[1],
       backgroundColor: emphasize(backgroundColor, 0.12),
     },
   };
 });
 
-const AddBanner = () => {
+const AddBanner = ({ onSuccess }) => {
   const [isLoading, setIsLoading] = useState(false);
   const [uploading, setUploading] = useState(false);
   const [formFields, setFormFields] = useState({
     images: [],
     catName: null,
     catId: null,
     subCat: null,
     subCatId: null,
     subCatName: null,
   });
 
   const [previews, setPreviews] = useState([]);
   const [categoryVal, setcategoryVal] = useState(null);
   const [subCatVal, setSubCatVal] = useState(null);
   const [subCatData, setSubCatData] = useState([]);
 
   const formdata = new FormData();
 
-  const history = useNavigate();
-
   const context = useContext(MyContext);
 
   useEffect(() => {
     fetchDataFromApi("/api/imageUpload").then((res) => {
       res?.map((item) => {
         item?.images?.map((img) => {
           deleteImages(`/api/homeBanner/deleteImage?img=${img}`).then((res) => {
             deleteData("/api/imageUpload/deleteAllImages");
           });
         });
       });
     });
   }, []);
 
   useEffect(()=>{
     const subCatArr=[];
 
     context.catData?.categoryList?.length !== 0 && context.catData?.categoryList?.map((cat, index) => {
             if(cat?.children.length!==0){
                 cat?.children?.map((subCat)=>{
                     subCatArr.push(subCat);
                 })
             }
     });
 
@@ -223,51 +220,51 @@ const AddBanner = () => {
 
   const addHomeBanner = (e) => {
     e.preventDefault();
 
     const appendedArray = [...previews, ...uniqueArray];
 
     img_arr = [];
 
     formdata.append("images", appendedArray);
 
     formFields.images = appendedArray;
 
     if (previews.length !== 0) {
       setIsLoading(true);
 
 
         console.log(formFields)
 
       postData(`/api/banners/create`, formFields).then((res) => {
         // console.log(res);
         setIsLoading(false);
         context.fetchCategory();
 
         deleteData("/api/imageUpload/deleteAllImages");
 
-        history("/banners");
+        if (onSuccess) onSuccess();
       });
     } else {
       context.setAlertBox({
         open: true,
         error: true,
         msg: "Please fill all the details",
       });
       return false;
     }
   };
 
   return (
     <>
       <div className="right-content w-100">
         <div className="card shadow border-0 w-100 flex-row p-4 mt-2">
           <h5 className="mb-0">Add Home Banner</h5>
           <Breadcrumbs aria-label="breadcrumb" className="ml-auto breadcrumbs_">
             <StyledBreadcrumb
               component="a"
               href="#"
               label="Dashboard"
               icon={<HomeIcon fontSize="small" />}
             />
 
             <StyledBreadcrumb
diff --git a/admin/src/pages/Banners/bannerList.js b/admin/src/pages/Banners/bannerList.js
index b5dffe0b0f317f43e543518cb04525ef9c50c1b2..11d3f10d5a0669b0e8d588190ce313cc9b1439bd 100644
--- a/admin/src/pages/Banners/bannerList.js
+++ b/admin/src/pages/Banners/bannerList.js
@@ -1,133 +1,141 @@
 import React, { useContext, useEffect, useState } from "react";
 import Button from "@mui/material/Button";
 
 import { FaPencilAlt } from "react-icons/fa";
 import { MdDelete } from "react-icons/md";
 import Pagination from "@mui/material/Pagination";
 import { MyContext } from "../../App";
 
 import { Link } from "react-router-dom";
 
 import { emphasize, styled } from "@mui/material/styles";
 import Breadcrumbs from "@mui/material/Breadcrumbs";
 import Chip from "@mui/material/Chip";
 import HomeIcon from "@mui/icons-material/Home";
 import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
 
 import { LazyLoadImage } from "react-lazy-load-image-component";
 import "react-lazy-load-image-component/src/effects/blur.css";
 
 import { deleteData, editData, fetchDataFromApi } from "../../utils/api";
+import AddBanner from "./addHomeBanner";
 
 const label = { inputProps: { "aria-label": "Checkbox demo" } };
 
 //breadcrumb code
 const StyledBreadcrumb = styled(Chip)(({ theme }) => {
   const backgroundColor =
     theme.palette.mode === "light"
       ? theme.palette.grey[100]
       : theme.palette.grey[800];
   return {
     backgroundColor,
     height: theme.spacing(3),
     color: theme.palette.text.primary,
     fontWeight: theme.typography.fontWeightRegular,
     "&:hover, &:focus": {
       backgroundColor: emphasize(backgroundColor, 0.06),
     },
     "&:active": {
       boxShadow: theme.shadows[1],
       backgroundColor: emphasize(backgroundColor, 0.12),
     },
   };
 });
 
 const BannersList = () => {
   const [slideList, setSlideList] = useState([]);
+  const [showForm, setShowForm] = useState(false);
 
   const context = useContext(MyContext);
 
-  useEffect(() => {
-    window.scrollTo(0, 0);
+  const loadSlides = () => {
     context.setProgress(20);
     fetchDataFromApi("/api/banners").then((res) => {
       setSlideList(res);
       context.setProgress(100);
     });
+  };
+
+  useEffect(() => {
+    window.scrollTo(0, 0);
+    loadSlides();
   }, []);
 
   const deleteSlide = (id) => {
     context.setProgress(30);
-    deleteData(`/api/banners/${id}`).then((res) => {
+    deleteData(`/api/banners/${id}`).then(() => {
       context.setProgress(100);
-      context.setProgress({
+      context.setAlertBox({
         open: true,
         error: false,
         msg: "Banner Deleted!",
       });
-      fetchDataFromApi("/api/banners").then((res) => {
-        setSlideList(res);
-        context.setProgress(100);
-
-      });
+      loadSlides();
     });
-   
   };
 
   return (
     <>
       <div className="right-content w-100">
         <div className="card shadow border-0 w-100 flex-row p-4 align-items-center">
           <h5 className="mb-0">Banner Slide List</h5>
 
           <div className="ml-auto d-flex align-items-center">
             <Breadcrumbs
               aria-label="breadcrumb"
               className="ml-auto breadcrumbs_"
             >
               <StyledBreadcrumb
                 component="a"
                 href="#"
                 label="Dashboard"
                 icon={<HomeIcon fontSize="small" />}
               />
 
               <StyledBreadcrumb
                 label="Banners"
                 deleteIcon={<ExpandMoreIcon />}
               />
             </Breadcrumbs>
 
-            <Link to="/banners/add">
-              <Button className="btn-blue  ml-3 pl-3 pr-3">
-                Add Home Banner
-              </Button>
-            </Link>
+            <Button
+              className="btn-blue ml-3 pl-3 pr-3"
+              onClick={() => setShowForm(!showForm)}
+            >
+              {showForm ? "Close" : "Add Home Banner"}
+            </Button>
           </div>
         </div>
 
+        {showForm && (
+          <div className="card shadow border-0 p-3 mt-4">
+            <AddBanner onSuccess={() => { setShowForm(false); loadSlides(); }} />
+          </div>
+        )}
+
         <div className="card shadow border-0 p-3 mt-4">
           <div className="table-responsive mt-3">
             <table className="table table-bordered table-striped v-align">
               <thead className="thead-dark">
                 <tr>
                   <th style={{ width: "200px" }}>IMAGE</th>
                   <th>ACTION</th>
                 </tr>
               </thead>
 
               <tbody>
                 {slideList?.length !== 0 &&
                   slideList?.map((item, index) => {
                     return (
                       <tr>
                         <td>
                           <div
                             className="d-flex align-items-center "
                             style={{ width: "200px" }}
                           >
                             <div
                               className="imgWrapper"
                               style={{ width: "200px", flex: "0 0 200px" }}
                             >
                               <div className="img card shadow m-0">
diff --git a/admin/src/pages/HomeBanner/addHomeSlide.js b/admin/src/pages/HomeBanner/addHomeSlide.js
index 4f079506fcfa738e590aade4f0c4463b731f131e..7683038679be62ea363611dacf1c726ca2ea19e9 100644
--- a/admin/src/pages/HomeBanner/addHomeSlide.js
+++ b/admin/src/pages/HomeBanner/addHomeSlide.js
@@ -1,91 +1,88 @@
 import React from "react";
 import Breadcrumbs from "@mui/material/Breadcrumbs";
 import HomeIcon from "@mui/icons-material/Home";
 import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
 import { emphasize, styled } from "@mui/material/styles";
 import Chip from "@mui/material/Chip";
 import { useContext, useEffect, useState } from "react";
 import { FaCloudUploadAlt } from "react-icons/fa";
 import Button from "@mui/material/Button";
 import MenuItem from "@mui/material/MenuItem";
 import Select from "@mui/material/Select";
 import {
   deleteData,
   deleteImages,
   editData,
   fetchDataFromApi,
   postData,
   uploadImage,
 } from "../../utils/api";
-import { useNavigate } from "react-router-dom";
 import { FaRegImages } from "react-icons/fa";
 import { MyContext } from "../../App";
 
 import CircularProgress from "@mui/material/CircularProgress";
 import { IoCloseSharp } from "react-icons/io5";
 
 import { LazyLoadImage } from "react-lazy-load-image-component";
 import "react-lazy-load-image-component/src/effects/blur.css";
 
 //breadcrumb code
 const StyledBreadcrumb = styled(Chip)(({ theme }) => {
   const backgroundColor =
     theme.palette.mode === "light"
       ? theme.palette.grey[100]
       : theme.palette.grey[800];
   return {
     backgroundColor,
     height: theme.spacing(3),
     color: theme.palette.text.primary,
     fontWeight: theme.typography.fontWeightRegular,
     "&:hover, &:focus": {
       backgroundColor: emphasize(backgroundColor, 0.06),
     },
     "&:active": {
       boxShadow: theme.shadows[1],
       backgroundColor: emphasize(backgroundColor, 0.12),
     },
   };
 });
 
-const AddHomeSlide = () => {
+const AddHomeSlide = ({ onSuccess }) => {
   const [isLoading, setIsLoading] = useState(false);
   const [uploading, setUploading] = useState(false);
   const [formFields, setFormFields] = useState({
     images: [],
     overlayText: "",
     ctaUrl: "",
     position: "center",
   });
 
   const [previews, setPreviews] = useState([]);
 
   const formdata = new FormData();
 
-  const history = useNavigate();
-
   const context = useContext(MyContext);
 
   useEffect(() => {
     fetchDataFromApi("/api/imageUpload").then((res) => {
       res?.map((item) => {
         item?.images?.map((img) => {
           deleteImages(`/api/homeBanner/deleteImage?img=${img}`).then((res) => {
             deleteData("/api/imageUpload/deleteAllImages");
           });
         });
       });
     });
   }, []);
 
   let img_arr = [];
   let uniqueArray = [];
   let selectedImages = [];
 
   const handleChange = (e) => {
     const { name, value } = e.target;
     setFormFields({
       ...formFields,
       [name]: value,
     });
   };
@@ -183,51 +180,51 @@ const AddHomeSlide = () => {
       previews.splice(index, 1); // 2nd parameter means remove one item only
     }
   };
 
   const addHomeSlide = (e) => {
     e.preventDefault();
 
     const appendedArray = [...previews, ...uniqueArray];
 
     img_arr = [];
 
     formdata.append("images", appendedArray);
 
     formFields.images = appendedArray;
 
     if (previews.length !== 0) {
       setIsLoading(true);
 
       postData(`/api/homeBanner/create`, formFields).then((res) => {
         // console.log(res);
         setIsLoading(false);
         context.fetchCategory();
 
         deleteData("/api/imageUpload/deleteAllImages");
 
-        history("/homeBannerSlide/list");
+        if (onSuccess) onSuccess();
       });
     } else {
       context.setAlertBox({
         open: true,
         error: true,
         msg: "Please fill all the details",
       });
       return false;
     }
   };
 
   return (
     <>
       <div className="right-content w-100">
         <div className="card shadow border-0 w-100 flex-row p-4 mt-2">
           <h5 className="mb-0">Add Home Slide</h5>
           <Breadcrumbs aria-label="breadcrumb" className="ml-auto breadcrumbs_">
             <StyledBreadcrumb
               component="a"
               href="#"
               label="Dashboard"
               icon={<HomeIcon fontSize="small" />}
             />
 
             <StyledBreadcrumb
diff --git a/admin/src/pages/HomeBanner/editSlide.js b/admin/src/pages/HomeBanner/editSlide.js
index da9e4b6460f537ecbeddaf6a5634a3c65c5b0e54..aac762abfae7bfdea2543b5fdf14019e2e87866d 100644
--- a/admin/src/pages/HomeBanner/editSlide.js
+++ b/admin/src/pages/HomeBanner/editSlide.js
@@ -181,51 +181,51 @@ const EditHomeSlide = () => {
 
     const appendedArray = [...previews, ...uniqueArray];
     console.log(appendedArray);
 
     img_arr = [];
 
     formdata.append("images", appendedArray);
 
     formFields.images = appendedArray;
 
     console.log(formdata);
     if (
       formFields.name !== "" &&
       formFields.color !== "" &&
       previews.length !== 0
     ) {
       setIsLoading(true);
 
       editData(`/api/homeBanner/${id}`, formFields).then((res) => {
         // console.log(res);
         setIsLoading(false);
         context.fetchCategory();
 
         deleteData("/api/imageUpload/deleteAllImages");
 
-        history("/homeBannerSlide/list");
+        history("/homeBannerSlide");
       });
     } else {
       context.setAlertBox({
         open: true,
         error: true,
         msg: "Please fill all the details",
       });
       return false;
     }
   };
 
   return (
     <>
       <div className="right-content w-100">
         <div className="card shadow border-0 w-100 flex-row p-4 mt-2">
           <h5 className="mb-0">Edit Home Slide</h5>
           <Breadcrumbs aria-label="breadcrumb" className="ml-auto breadcrumbs_">
             <StyledBreadcrumb
               component="a"
               href="#"
               label="Dashboard"
               icon={<HomeIcon fontSize="small" />}
             />
 
             <StyledBreadcrumb
diff --git a/admin/src/pages/HomeBanner/homeSlideList.js b/admin/src/pages/HomeBanner/homeSlideList.js
index c9cd4e44ffacc574690290e3f47c75daa2e1900b..b577746bcb01f1a5716122be0f0e6d0c7c091263 100644
--- a/admin/src/pages/HomeBanner/homeSlideList.js
+++ b/admin/src/pages/HomeBanner/homeSlideList.js
@@ -1,131 +1,141 @@
 import React, { useContext, useEffect, useState } from "react";
 import Button from "@mui/material/Button";
 
 import { FaPencilAlt } from "react-icons/fa";
 import { MdDelete } from "react-icons/md";
 import Pagination from "@mui/material/Pagination";
 import { MyContext } from "../../App";
 
 import { Link } from "react-router-dom";
+import AddHomeSlide from "./addHomeSlide";
 
 import { emphasize, styled } from "@mui/material/styles";
 import Breadcrumbs from "@mui/material/Breadcrumbs";
 import Chip from "@mui/material/Chip";
 import HomeIcon from "@mui/icons-material/Home";
 import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
 
 import { LazyLoadImage } from "react-lazy-load-image-component";
 import "react-lazy-load-image-component/src/effects/blur.css";
 
 import { deleteData, editData, fetchDataFromApi } from "../../utils/api";
 
 const label = { inputProps: { "aria-label": "Checkbox demo" } };
 
 //breadcrumb code
 const StyledBreadcrumb = styled(Chip)(({ theme }) => {
   const backgroundColor =
     theme.palette.mode === "light"
       ? theme.palette.grey[100]
       : theme.palette.grey[800];
   return {
     backgroundColor,
     height: theme.spacing(3),
     color: theme.palette.text.primary,
     fontWeight: theme.typography.fontWeightRegular,
     "&:hover, &:focus": {
       backgroundColor: emphasize(backgroundColor, 0.06),
     },
     "&:active": {
       boxShadow: theme.shadows[1],
       backgroundColor: emphasize(backgroundColor, 0.12),
     },
   };
 });
 
 const HomeSlidesList = () => {
   const [slideList, setSlideList] = useState([]);
+  const [showForm, setShowForm] = useState(false);
 
   const context = useContext(MyContext);
 
-  useEffect(() => {
-    window.scrollTo(0, 0);
+  const loadSlides = () => {
     context.setProgress(20);
     fetchDataFromApi("/api/homeBanner").then((res) => {
       setSlideList(res);
       context.setProgress(100);
     });
+  };
+
+  useEffect(() => {
+    window.scrollTo(0, 0);
+    loadSlides();
   }, []);
 
   const deleteSlide = (id) => {
     context.setProgress(30);
-      deleteData(`/api/homeBanner/${id}`).then((res) => {
-        context.setProgress(100);
-        fetchDataFromApi("/api/homeBanner").then((res) => {
-          setSlideList(res);
-          context.setProgress(100);
-          context.setProgress({
-            open: true,
-            error: false,
-            msg: "Slide Deleted!",
-          });
-        });
+    deleteData(`/api/homeBanner/${id}`).then(() => {
+      context.setProgress(100);
+      loadSlides();
+      context.setProgress({
+        open: true,
+        error: false,
+        msg: "Slide Deleted!",
       });
+    });
   };
 
   return (
     <>
       <div className="right-content w-100">
         <div className="card shadow border-0 w-100 flex-row p-4 align-items-center">
           <h5 className="mb-0">Home Banner Slide List</h5>
 
           <div className="ml-auto d-flex align-items-center">
             <Breadcrumbs
               aria-label="breadcrumb"
               className="ml-auto breadcrumbs_"
             >
               <StyledBreadcrumb
                 component="a"
                 href="#"
                 label="Dashboard"
                 icon={<HomeIcon fontSize="small" />}
               />
 
               <StyledBreadcrumb
                 label="Home Banner Slide"
                 deleteIcon={<ExpandMoreIcon />}
               />
             </Breadcrumbs>
 
-            <Link to="/homeBannerSlide/add">
-              <Button className="btn-blue  ml-3 pl-3 pr-3">
-                Add Home Slide
-              </Button>
-            </Link>
+            <Button
+              className="btn-blue  ml-3 pl-3 pr-3"
+              onClick={() => setShowForm(!showForm)}
+            >
+              {showForm ? "Close" : "Add Home Slide"}
+            </Button>
           </div>
         </div>
 
+        {showForm && (
+          <div className="card shadow border-0 p-3 mt-4">
+            <AddHomeSlide onSuccess={() => { setShowForm(false); loadSlides(); }} />
+          </div>
+        )}
+
         <div className="card shadow border-0 p-3 mt-4">
           <div className="table-responsive mt-3">
             <table className="table table-bordered table-striped v-align">
               <thead className="thead-dark">
                 <tr>
                   <th style={{ width: "200px" }}>IMAGE</th>
                   <th>ACTION</th>
                 </tr>
               </thead>
 
               <tbody>
                 {slideList?.length !== 0 &&
                   slideList?.map((item, index) => {
                     return (
                       <tr>
                         <td>
                           <div
                             className="d-flex align-items-center "
                             style={{ width: "200px" }}
                           >
                             <div
                               className="imgWrapper"
                               style={{ width: "200px", flex: "0 0 200px" }}
                             >
                               <div className="img card shadow m-0">
diff --git a/admin/src/pages/HomeBottomBanners/addHomeBottomBanner.js b/admin/src/pages/HomeBottomBanners/addHomeBottomBanner.js
index 382e03f6d11bfa99e667a2ec74b8ceed22fec0fd..9cd0814d69ac7c99b12805061530814e79332945 100644
--- a/admin/src/pages/HomeBottomBanners/addHomeBottomBanner.js
+++ b/admin/src/pages/HomeBottomBanners/addHomeBottomBanner.js
@@ -1,96 +1,93 @@
 import React from "react";
 import Breadcrumbs from "@mui/material/Breadcrumbs";
 import HomeIcon from "@mui/icons-material/Home";
 import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
 import { emphasize, styled } from "@mui/material/styles";
 import Chip from "@mui/material/Chip";
 import { useContext, useEffect, useState } from "react";
 import { FaCloudUploadAlt } from "react-icons/fa";
 import Button from "@mui/material/Button";
 import MenuItem from "@mui/material/MenuItem";
 import Select from "@mui/material/Select";
 import {
   deleteData,
   deleteImages,
   editData,
   fetchDataFromApi,
   postData,
   uploadImage,
 } from "../../utils/api";
-import { useNavigate } from "react-router-dom";
 import { FaRegImages } from "react-icons/fa";
 import { MyContext } from "../../App";
 
 import CircularProgress from "@mui/material/CircularProgress";
 import { IoCloseSharp } from "react-icons/io5";
 
 import { LazyLoadImage } from "react-lazy-load-image-component";
 import "react-lazy-load-image-component/src/effects/blur.css";
 
 //breadcrumb code
 const StyledBreadcrumb = styled(Chip)(({ theme }) => {
   const backgroundColor =
     theme.palette.mode === "light"
       ? theme.palette.grey[100]
       : theme.palette.grey[800];
   return {
     backgroundColor,
     height: theme.spacing(3),
     color: theme.palette.text.primary,
     fontWeight: theme.typography.fontWeightRegular,
     "&:hover, &:focus": {
       backgroundColor: emphasize(backgroundColor, 0.06),
     },
     "&:active": {
       boxShadow: theme.shadows[1],
       backgroundColor: emphasize(backgroundColor, 0.12),
     },
   };
 });
 
-const AddBanner = () => {
+const AddBanner = ({ onSuccess }) => {
   const [isLoading, setIsLoading] = useState(false);
   const [uploading, setUploading] = useState(false);
   const [formFields, setFormFields] = useState({
     images: [],
     catName: null,
     catId: null,
     subCat: null,
     subCatId: null,
     subCatName: null,
   });
 
   const [previews, setPreviews] = useState([]);
   const [categoryVal, setcategoryVal] = useState(null);
   const [subCatVal, setSubCatVal] = useState(null);
   const [subCatData, setSubCatData] = useState([]);
 
   const formdata = new FormData();
 
-  const history = useNavigate();
-
   const context = useContext(MyContext);
 
   useEffect(() => {
     fetchDataFromApi("/api/imageUpload").then((res) => {
       res?.map((item) => {
         item?.images?.map((img) => {
           deleteImages(`/api/homeBottomBanners/deleteImage?img=${img}`).then(
             (res) => {
               deleteData("/api/imageUpload/deleteAllImages");
             }
           );
         });
       });
     });
   }, []);
 
   useEffect(() => {
     const subCatArr = [];
 
     context.catData?.categoryList?.length !== 0 &&
       context.catData?.categoryList?.map((cat, index) => {
         if (cat?.children.length !== 0) {
           cat?.children?.map((subCat) => {
             subCatArr.push(subCat);
           });
@@ -225,51 +222,51 @@ const AddBanner = () => {
   };
 
   const addHomeBanner = (e) => {
     e.preventDefault();
 
     const appendedArray = [...previews, ...uniqueArray];
 
     img_arr = [];
 
     formdata.append("images", appendedArray);
 
     formFields.images = appendedArray;
 
     if (previews.length !== 0) {
       setIsLoading(true);
 
       console.log(formFields);
 
       postData(`/api/homeBottomBanners/create`, formFields).then((res) => {
         // console.log(res);
         setIsLoading(false);
         context.fetchCategory();
 
         deleteData("/api/imageUpload/deleteAllImages");
 
-        history("/homeBottomBanners");
+        if (onSuccess) onSuccess();
       });
     } else {
       context.setAlertBox({
         open: true,
         error: true,
         msg: "Please fill all the details",
       });
       return false;
     }
   };
 
   return (
     <>
       <div className="right-content w-100">
         <div className="card shadow border-0 w-100 flex-row p-4 mt-2">
           <h5 className="mb-0">Add Home Bottom Banner</h5>
           <Breadcrumbs aria-label="breadcrumb" className="ml-auto breadcrumbs_">
             <StyledBreadcrumb
               component="a"
               href="#"
               label="Dashboard"
               icon={<HomeIcon fontSize="small" />}
             />
 
             <StyledBreadcrumb
diff --git a/admin/src/pages/HomeBottomBanners/bannerList.js b/admin/src/pages/HomeBottomBanners/bannerList.js
index eac12ac0a70c9deef95d632466d9908988602f2b..f904e9753303d02052cd2b1134270663b66d405b 100644
--- a/admin/src/pages/HomeBottomBanners/bannerList.js
+++ b/admin/src/pages/HomeBottomBanners/bannerList.js
@@ -1,134 +1,143 @@
 import React, { useContext, useEffect, useState } from "react";
 import Button from "@mui/material/Button";
 
 import { FaPencilAlt } from "react-icons/fa";
 import { MdDelete } from "react-icons/md";
 import Pagination from "@mui/material/Pagination";
 import { MyContext } from "../../App";
 
 import { Link } from "react-router-dom";
+import AddHomeBottomBanner from "./addHomeBottomBanner";
 
 import { emphasize, styled } from "@mui/material/styles";
 import Breadcrumbs from "@mui/material/Breadcrumbs";
 import Chip from "@mui/material/Chip";
 import HomeIcon from "@mui/icons-material/Home";
 import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
 
 import { LazyLoadImage } from "react-lazy-load-image-component";
 import "react-lazy-load-image-component/src/effects/blur.css";
 
 import { deleteData, editData, fetchDataFromApi } from "../../utils/api";
 
 const label = { inputProps: { "aria-label": "Checkbox demo" } };
 
 //breadcrumb code
 const StyledBreadcrumb = styled(Chip)(({ theme }) => {
   const backgroundColor =
     theme.palette.mode === "light"
       ? theme.palette.grey[100]
       : theme.palette.grey[800];
   return {
     backgroundColor,
     height: theme.spacing(3),
     color: theme.palette.text.primary,
     fontWeight: theme.typography.fontWeightRegular,
     "&:hover, &:focus": {
       backgroundColor: emphasize(backgroundColor, 0.06),
     },
     "&:active": {
       boxShadow: theme.shadows[1],
       backgroundColor: emphasize(backgroundColor, 0.12),
     },
   };
 });
 
 const BannersList = () => {
   const [slideList, setSlideList] = useState([]);
+  const [showForm, setShowForm] = useState(false);
 
   const context = useContext(MyContext);
 
-  useEffect(() => {
-    window.scrollTo(0, 0);
+  const loadSlides = () => {
     context.setProgress(20);
     fetchDataFromApi("/api/homeBottomBanners").then((res) => {
       setSlideList(res);
       context.setProgress(100);
     });
+  };
+
+  useEffect(() => {
+    window.scrollTo(0, 0);
+    loadSlides();
   }, []);
 
   const deleteSlide = (id) => {
     
     context.setProgress(30);
     deleteData(`/api/homeBottomBanners/${id}`).then((res) => {
       context.setProgress(100);
       context.setProgress({
         open: true,
         error: false,
         msg: "Banner Deleted!",
       });
-      fetchDataFromApi("/api/homeBottomBanners").then((res) => {
-        setSlideList(res);
-        context.setProgress(100);
-
-      });
-    });   
+      loadSlides();
+    });
    
   };
 
   return (
     <>
       <div className="right-content w-100">
         <div className="card shadow border-0 w-100 flex-row p-4 align-items-center">
           <h5 className="mb-0">Home Bottom Banner List</h5>
 
           <div className="ml-auto d-flex align-items-center">
             <Breadcrumbs
               aria-label="breadcrumb"
               className="ml-auto breadcrumbs_"
             >
               <StyledBreadcrumb
                 component="a"
                 href="#"
                 label="Dashboard"
                 icon={<HomeIcon fontSize="small" />}
               />
 
               <StyledBreadcrumb
                 label="Banners"
                 deleteIcon={<ExpandMoreIcon />}
               />
             </Breadcrumbs>
 
-            <Link to="/homeBottomBanners/add">
-              <Button className="btn-blue  ml-3 pl-3 pr-3">
-                Add Home Bottom Banner
-              </Button>
-            </Link>
+            <Button
+              className="btn-blue  ml-3 pl-3 pr-3"
+              onClick={() => setShowForm(!showForm)}
+            >
+              {showForm ? "Close" : "Add Home Bottom Banner"}
+            </Button>
           </div>
         </div>
 
+        {showForm && (
+          <div className="card shadow border-0 p-3 mt-4">
+            <AddHomeBottomBanner onSuccess={() => { setShowForm(false); loadSlides(); }} />
+          </div>
+        )}
+
         <div className="card shadow border-0 p-3 mt-4">
           <div className="table-responsive mt-3">
             <table className="table table-bordered table-striped v-align">
               <thead className="thead-dark">
                 <tr>
                   <th style={{ width: "200px" }}>IMAGE</th>
                   <th>ACTION</th>
                 </tr>
               </thead>
 
               <tbody>
                 {slideList?.length !== 0 &&
                   slideList?.map((item, index) => {
                     return (
                       <tr>
                         <td>
                           <div
                             className="d-flex align-items-center "
                             style={{ width: "200px" }}
                           >
                             <div
                               className="imgWrapper"
                               style={{ width: "200px", flex: "0 0 200px" }}
                             >
                               <div className="img card shadow m-0">
diff --git a/admin/src/pages/HomeSideBanners/addHomeSideBanner.js b/admin/src/pages/HomeSideBanners/addHomeSideBanner.js
index 9c4906d584f14d069fb3b53a2078d9d6a2975f26..05c7ff90c56b00948e83be1ec540a91f4e553584 100644
--- a/admin/src/pages/HomeSideBanners/addHomeSideBanner.js
+++ b/admin/src/pages/HomeSideBanners/addHomeSideBanner.js
@@ -1,96 +1,93 @@
 import React from "react";
 import Breadcrumbs from "@mui/material/Breadcrumbs";
 import HomeIcon from "@mui/icons-material/Home";
 import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
 import { emphasize, styled } from "@mui/material/styles";
 import Chip from "@mui/material/Chip";
 import { useContext, useEffect, useState } from "react";
 import { FaCloudUploadAlt } from "react-icons/fa";
 import Button from "@mui/material/Button";
 import MenuItem from "@mui/material/MenuItem";
 import Select from "@mui/material/Select";
 import {
   deleteData,
   deleteImages,
   editData,
   fetchDataFromApi,
   postData,
   uploadImage,
 } from "../../utils/api";
-import { useNavigate } from "react-router-dom";
 import { FaRegImages } from "react-icons/fa";
 import { MyContext } from "../../App";
 
 import CircularProgress from "@mui/material/CircularProgress";
 import { IoCloseSharp } from "react-icons/io5";
 
 import { LazyLoadImage } from "react-lazy-load-image-component";
 import "react-lazy-load-image-component/src/effects/blur.css";
 
 //breadcrumb code
 const StyledBreadcrumb = styled(Chip)(({ theme }) => {
   const backgroundColor =
     theme.palette.mode === "light"
       ? theme.palette.grey[100]
       : theme.palette.grey[800];
   return {
     backgroundColor,
     height: theme.spacing(3),
     color: theme.palette.text.primary,
     fontWeight: theme.typography.fontWeightRegular,
     "&:hover, &:focus": {
       backgroundColor: emphasize(backgroundColor, 0.06),
     },
     "&:active": {
       boxShadow: theme.shadows[1],
       backgroundColor: emphasize(backgroundColor, 0.12),
     },
   };
 });
 
-const AddBanner = () => {
+const AddBanner = ({ onSuccess }) => {
   const [isLoading, setIsLoading] = useState(false);
   const [uploading, setUploading] = useState(false);
   const [formFields, setFormFields] = useState({
     images: [],
     catName: null,
     catId: null,
     subCat: null,
     subCatId: null,
     subCatName: null,
   });
 
   const [previews, setPreviews] = useState([]);
   const [categoryVal, setcategoryVal] = useState(null);
   const [subCatVal, setSubCatVal] = useState(null);
   const [subCatData, setSubCatData] = useState([]);
 
   const formdata = new FormData();
 
-  const history = useNavigate();
-
   const context = useContext(MyContext);
 
   useEffect(() => {
     fetchDataFromApi("/api/imageUpload").then((res) => {
       res?.map((item) => {
         item?.images?.map((img) => {
           deleteImages(`/api/homeSideBanners/deleteImage?img=${img}`).then(
             (res) => {
               deleteData("/api/imageUpload/deleteAllImages");
             }
           );
         });
       });
     });
   }, []);
 
   useEffect(() => {
     const subCatArr = [];
 
     context.catData?.categoryList?.length !== 0 &&
       context.catData?.categoryList?.map((cat, index) => {
         if (cat?.children.length !== 0) {
           cat?.children?.map((subCat) => {
             subCatArr.push(subCat);
           });
@@ -225,51 +222,51 @@ const AddBanner = () => {
   };
 
   const addHomeBanner = (e) => {
     e.preventDefault();
 
     const appendedArray = [...previews, ...uniqueArray];
 
     img_arr = [];
 
     formdata.append("images", appendedArray);
 
     formFields.images = appendedArray;
 
     if (previews.length !== 0) {
       setIsLoading(true);
 
       console.log(formFields);
 
       postData(`/api/homeSideBanners/create`, formFields).then((res) => {
         // console.log(res);
         setIsLoading(false);
         context.fetchCategory();
 
         deleteData("/api/imageUpload/deleteAllImages");
 
-        history("/homeSideBanners");
+        if (onSuccess) onSuccess();
       });
     } else {
       context.setAlertBox({
         open: true,
         error: true,
         msg: "Please fill all the details",
       });
       return false;
     }
   };
 
   return (
     <>
       <div className="right-content w-100">
         <div className="card shadow border-0 w-100 flex-row p-4 mt-2">
           <h5 className="mb-0">Add Home Side Banner</h5>
           <Breadcrumbs aria-label="breadcrumb" className="ml-auto breadcrumbs_">
             <StyledBreadcrumb
               component="a"
               href="#"
               label="Dashboard"
               icon={<HomeIcon fontSize="small" />}
             />
 
             <StyledBreadcrumb
diff --git a/admin/src/pages/HomeSideBanners/bannerList.js b/admin/src/pages/HomeSideBanners/bannerList.js
index f7b19f087c3919195dd13d9b43390c821bf5bd8f..3ba397c533ca01c011bfbe4b0b64044debf36d81 100644
--- a/admin/src/pages/HomeSideBanners/bannerList.js
+++ b/admin/src/pages/HomeSideBanners/bannerList.js
@@ -1,133 +1,142 @@
 import React, { useContext, useEffect, useState } from "react";
 import Button from "@mui/material/Button";
 
 import { FaPencilAlt } from "react-icons/fa";
 import { MdDelete } from "react-icons/md";
 import Pagination from "@mui/material/Pagination";
 import { MyContext } from "../../App";
 
 import { Link } from "react-router-dom";
+import AddHomeSideBanner from "./addHomeSideBanner";
 
 import { emphasize, styled } from "@mui/material/styles";
 import Breadcrumbs from "@mui/material/Breadcrumbs";
 import Chip from "@mui/material/Chip";
 import HomeIcon from "@mui/icons-material/Home";
 import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
 
 import { LazyLoadImage } from "react-lazy-load-image-component";
 import "react-lazy-load-image-component/src/effects/blur.css";
 
 import { deleteData, editData, fetchDataFromApi } from "../../utils/api";
 
 const label = { inputProps: { "aria-label": "Checkbox demo" } };
 
 //breadcrumb code
 const StyledBreadcrumb = styled(Chip)(({ theme }) => {
   const backgroundColor =
     theme.palette.mode === "light"
       ? theme.palette.grey[100]
       : theme.palette.grey[800];
   return {
     backgroundColor,
     height: theme.spacing(3),
     color: theme.palette.text.primary,
     fontWeight: theme.typography.fontWeightRegular,
     "&:hover, &:focus": {
       backgroundColor: emphasize(backgroundColor, 0.06),
     },
     "&:active": {
       boxShadow: theme.shadows[1],
       backgroundColor: emphasize(backgroundColor, 0.12),
     },
   };
 });
 
 const BannersList = () => {
   const [slideList, setSlideList] = useState([]);
+  const [showForm, setShowForm] = useState(false);
 
   const context = useContext(MyContext);
 
-  useEffect(() => {
-    window.scrollTo(0, 0);
+  const loadSlides = () => {
     context.setProgress(20);
     fetchDataFromApi("/api/homeSideBanners").then((res) => {
       setSlideList(res);
       context.setProgress(100);
     });
+  };
+
+  useEffect(() => {
+    window.scrollTo(0, 0);
+    loadSlides();
   }, []);
 
   const deleteSlide = (id) => {
     context.setProgress(30);
     deleteData(`/api/homeSideBanners/${id}`).then((res) => {
       context.setProgress(100);
       context.setProgress({
         open: true,
         error: false,
         msg: "Banner Deleted!",
       });
-      fetchDataFromApi("/api/homeSideBanners").then((res) => {
-        setSlideList(res);
-        context.setProgress(100);
-
-      });
+      loadSlides();
     });
    
   };
 
   return (
     <>
       <div className="right-content w-100">
         <div className="card shadow border-0 w-100 flex-row p-4 align-items-center">
           <h5 className="mb-0">Home Side Banner List</h5>
 
           <div className="ml-auto d-flex align-items-center">
             <Breadcrumbs
               aria-label="breadcrumb"
               className="ml-auto breadcrumbs_"
             >
               <StyledBreadcrumb
                 component="a"
                 href="#"
                 label="Dashboard"
                 icon={<HomeIcon fontSize="small" />}
               />
 
               <StyledBreadcrumb
                 label="Banners"
                 deleteIcon={<ExpandMoreIcon />}
               />
             </Breadcrumbs>
 
-            <Link to="/homeSideBanners/add">
-              <Button className="btn-blue  ml-3 pl-3 pr-3">
-                Add Home Side Banner
-              </Button>
-            </Link>
+            <Button
+              className="btn-blue  ml-3 pl-3 pr-3"
+              onClick={() => setShowForm(!showForm)}
+            >
+              {showForm ? "Close" : "Add Home Side Banner"}
+            </Button>
           </div>
         </div>
 
+        {showForm && (
+          <div className="card shadow border-0 p-3 mt-4">
+            <AddHomeSideBanner onSuccess={() => { setShowForm(false); loadSlides(); }} />
+          </div>
+        )}
+
         <div className="card shadow border-0 p-3 mt-4">
           <div className="table-responsive mt-3">
             <table className="table table-bordered table-striped v-align">
               <thead className="thead-dark">
                 <tr>
                   <th style={{ width: "200px" }}>IMAGE</th>
                   <th>ACTION</th>
                 </tr>
               </thead>
 
               <tbody>
                 {slideList?.length !== 0 &&
                   slideList?.map((item, index) => {
                     return (
                       <tr>
                         <td>
                           <div
                             className="d-flex align-items-center "
                             style={{ width: "200px" }}
                           >
                             <div
                               className="imgWrapper"
                               style={{ width: "200px", flex: "0 0 200px" }}
                             >
                               <div className="img card shadow m-0">
diff --git a/admin/src/pages/Notifications/index.js b/admin/src/pages/Notifications/index.js
index e325a4482d02429fd706a903b23720541a4284f6..f7e46c5e91569f5465c95b9308360657c7c2bd64 100644
--- a/admin/src/pages/Notifications/index.js
+++ b/admin/src/pages/Notifications/index.js
@@ -1,65 +1,97 @@
 import { useContext, useEffect, useState } from "react";
 import Button from "@mui/material/Button";
 import TextField from "@mui/material/TextField";
 import { MyContext } from "../../App";
 import { fetchDataFromApi, postData, editData, deleteData } from "../../utils/api";
+import logger from "../../utils/logger";
 
 const Notifications = () => {
   const [message, setMessage] = useState("");
   const [list, setList] = useState([]);
   const context = useContext(MyContext);
 
   const load = () => {
-    fetchDataFromApi('/api/notifications').then(setList);
+    fetchDataFromApi('/api/notifications')
+      .then((res) => setList(Array.isArray(res) ? res : []))
+      .catch((err) => {
+        logger.error(err);
+        context.setAlertBox({ open: true, error: true, msg: 'Failed to load' });
+      });
   };
 
   useEffect(() => {
+    let isMounted = true;
     window.scrollTo(0, 0);
     load();
+    return () => {
+      isMounted = false;
+    };
   }, []);
 
   const addNotification = () => {
     if (!message.trim()) return;
     context.setProgress(30);
-    postData('/api/notifications', { message }).then(() => {
-      setMessage("");
-      load();
-      context.setProgress(100);
-    });
+    postData('/api/notifications', { message })
+      .then(() => {
+        setMessage("");
+        load();
+        context.setProgress(100);
+        context.setAlertBox({ open: true, error: false, msg: 'Added!' });
+      })
+      .catch((err) => {
+        logger.error(err);
+        context.setProgress(100);
+        context.setAlertBox({ open: true, error: true, msg: 'Failed to add' });
+      });
   };
 
   const publish = (id) => {
-    editData(`/api/notifications/${id}/publish`).then(load);
+    editData(`/api/notifications/${id}/publish`)
+      .then(() => {
+        context.setAlertBox({ open: true, error: false, msg: 'Published!' });
+        load();
+      })
+      .catch((err) => logger.error(err));
   };
 
   const unpublish = (id) => {
-    editData(`/api/notifications/${id}/unpublish`).then(load);
+    editData(`/api/notifications/${id}/unpublish`)
+      .then(() => {
+        context.setAlertBox({ open: true, error: false, msg: 'Unpublished!' });
+        load();
+      })
+      .catch((err) => logger.error(err));
   };
 
   const remove = (id) => {
-    deleteData(`/api/notifications/${id}`).then(load);
+    deleteData(`/api/notifications/${id}`)
+      .then(() => {
+        context.setAlertBox({ open: true, error: false, msg: 'Deleted!' });
+        load();
+      })
+      .catch((err) => logger.error(err));
   };
 
   return (
     <div className="right-content w-100">
       <div className="card shadow border-0 w-100 flex-row p-4 align-items-center">
         <h5 className="mb-0">Notifications</h5>
       </div>
 
       <div className="card shadow border-0 p-3 mt-4">
         <div className="d-flex mb-3">
           <TextField
             value={message}
             onChange={(e) => setMessage(e.target.value)}
             label="Notification Message"
             className="mr-3"
             fullWidth
             size="small"
           />
           <Button variant="contained" onClick={addNotification}>
             Add
           </Button>
         </div>
         <div className="table-responsive mt-3">
           <table className="table table-bordered">
             <thead className="thead-dark">
@@ -78,25 +110,26 @@ const Notifications = () => {
                     {item.isPublished ? (
                       <Button size="small" onClick={() => unpublish(item.id)}>
                         Unpublish
                       </Button>
                     ) : (
                       <Button size="small" onClick={() => publish(item.id)}>
                         Publish
                       </Button>
                     )}
                     <Button color="error" size="small" onClick={() => remove(item.id)}>
                       Delete
                     </Button>
                   </td>
                 </tr>
               ))}
             </tbody>
           </table>
         </div>
       </div>
     </div>
   );
 };
 
 export default Notifications;
 
+
diff --git a/admin/src/responsive.css b/admin/src/responsive.css
index 929d913223c8f3679986ae4fe78dc2a7e6b08193..b3e15812071ba6c2d48c0af4814e42a265921fce 100644
--- a/admin/src/responsive.css
+++ b/admin/src/responsive.css
@@ -1,36 +1,36 @@
 @media only screen and (min-width:320px) and (max-width:992px){
 
   .res-hide{display: none !important;}
   .res-col{flex-direction: column !important;}
 
   body,html{overflow-x: hidden !important;}
 
   header{padding: 15px 0px; height: auto;}
   header .part1,header .part3{padding: 0px !important;}
   header .part1{max-width: 40% !important; flex: 0 0 40% !important;}
-  header .logo img{width: 35px !important;}
+  header .logo img{width: 80px !important;}
   header .logo span{font-size: 16px;}
 
   header .part3{max-width: 60% !important; flex: 0 0 60% !important;}
 
 
   .main .sidebarWrapper{width: 80% !important; height: 100vh !important; position: fixed; top: 0px; left: -100%; z-index: 10000; opacity: 0; transition:all 0.3s ease-in-out}
   .main .sidebarWrapper .sidebar{width: 100% !important; position: relative !important; top: 0px !important;  max-height:inherit !important;}
 
   .sidebarWrapper.open{left: 0px !important; opacity: 1 !important;}
 
 .sidebarOverlay{position: fixed; top: 0px; left: 0px; background: rgba(0,0,0,0.7); z-index: 100; width: 100%; height: 100% !important; z-index: 1000;}
 .sidebarOverlay.show{display: block !important;}
 
 
   .main .content{width: 100% !important; flex: 0 0 100% !important;}
   .right-content{padding: 90px 15px !important;}
 
   .dashboardBoxWrapper{white-space: nowrap !important; overflow-x: scroll; overflow-y: hidden; display: block !important; margin-bottom: 20px !important;}
   .dashboardBoxWrapper::-webkit-scrollbar{display: none !important;}
   .dashboardBoxWrapper .dashboardBox{display: inline-block !important; width: 270px !important; height: 118px !important; margin-right: 10px !important;}
   .topPart2{padding-left: 15px !important;}
 
   .tableFooter{flex-direction: column;}
   .tableFooter nav{margin-top: 25px;}
   .tableFooter nav ul{white-space: nowrap !important; overflow-x: scroll; overflow-y: hidden; display: block !important; margin-bottom: 20px !important;}
diff --git a/admin/src/utils/api.js b/admin/src/utils/api.js
index 335d15143855c78f00afadfac01338f404701bfe..a6a800097c3a23d72d96ff407740f9ac5352ae46 100644
--- a/admin/src/utils/api.js
+++ b/admin/src/utils/api.js
@@ -1,76 +1,77 @@
 import axios from "axios";
+import logger from "./logger";
 
 const token=localStorage.getItem("token");
 
 const params={
     headers: {
         'Authorization': `Bearer ${token}`, // Include your API key in the Authorization header
         'Content-Type': 'application/json', // Adjust the content type as needed
       },
 
 } 
 
 export const fetchDataFromApi = async (url) => {
     try {
         const { data } = await axios.get(process.env.REACT_APP_BASE_URL + url,params)
         return data;
     } catch (error) {
-        console.log(error);
+        logger.error(error);
         return error;
     }
 }
 
 
 export const uploadImage = async (url, formData) => {
     const { res } = await axios.post(process.env.REACT_APP_BASE_URL + url , formData)
     return res;
 }
 
 export const postData = async (url, formData) => {
 
     try {
         const response = await fetch(process.env.REACT_APP_BASE_URL + url, {
             method: 'POST',
             headers: {
                 'Authorization': `Bearer ${token}`, // Include your API key in the Authorization header
                 'Content-Type': 'application/json', // Adjust the content type as needed
               },
            
             body: JSON.stringify(formData)
         });
 
 
       
 
         if (response.ok) {
             const data = await response.json();
             //console.log(data)
             return data;
         } else {
             const errorData = await response.json();
             return errorData;
         }
 
     } catch (error) {
-        console.error('Error:', error);
+        logger.error('Error:', error);
     }
 
 
 }
 
 
 export const editData = async (url, updatedData ) => {
     const { res } = await axios.put(`${process.env.REACT_APP_BASE_URL}${url}`,updatedData)
     return res;
 }
 
 export const deleteData = async (url ) => {
     const { res } = await axios.delete(`${process.env.REACT_APP_BASE_URL}${url}`,params)
     return res;
 }
 
 
 export const deleteImages = async (url,image ) => {
     const { res } = await axios.delete(`${process.env.REACT_APP_BASE_URL}${url}`,image);
     return res;
-}
\ No newline at end of file
+}
diff --git a/admin/src/utils/logger.js b/admin/src/utils/logger.js
new file mode 100644
index 0000000000000000000000000000000000000000..4447c7bcbff5e73c2b0f6193451bc6a49981bc5a
--- /dev/null
+++ b/admin/src/utils/logger.js
@@ -0,0 +1,7 @@
+const logger = {
+  log: (...args) => console.log(...args),
+  error: (...args) => console.error(...args),
+};
+
+export default logger;
+
